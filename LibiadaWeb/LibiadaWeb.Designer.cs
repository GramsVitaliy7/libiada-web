//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_alphabet_chain", "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.chain), "alphabet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.alphabet), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_alphabet_element", "element", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.element), "alphabet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.alphabet), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_chain", "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.chain), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_first_element", "element", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.element), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_link_up", "link_up", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.link_up), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_second_element", "element", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.element), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_type1", "characteristic_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.characteristic_type), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_building_chain", "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.chain), "building", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.building), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_chain_building_type", "building_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.building_type), "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_chain_matter", "matter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.matter), "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_chain_notation", "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.notation), "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_chain_piece_type", "piece_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.piece_type), "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_chain", "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.chain), "characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_child_chain", "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.chain), "connection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.connection), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_parent_chain", "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.chain), "connection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.connection), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_link_up", "link_up", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.link_up), "characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_type", "characteristic_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.characteristic_type), "characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_group", "characteristic_group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.characteristic_group), "characteristic_type", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic_type), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_connection_type", "connection_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.connection_type), "connection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.connection), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_dna_information_matter", "matter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.matter), "dna_information", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.dna_information), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_element_notation", "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.notation), "element", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.element), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_matter_nature", "nature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.nature), "matter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.matter), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_matter_remote_db", "remote_db", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.remote_db), "matter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.matter), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_notation_nature", "nature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.nature), "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.notation), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_piece_type_nature", "nature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.nature), "piece_type", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.piece_type), true)]

#endregion

namespace LibiadaWeb
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class LibiadaWebEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект LibiadaWebEntities, используя строку соединения из раздела "LibiadaWebEntities" файла конфигурации приложения.
        /// </summary>
        public LibiadaWebEntities() : base("name=LibiadaWebEntities", "LibiadaWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта LibiadaWebEntities.
        /// </summary>
        public LibiadaWebEntities(string connectionString) : base(connectionString, "LibiadaWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта LibiadaWebEntities.
        /// </summary>
        public LibiadaWebEntities(EntityConnection connection) : base(connection, "LibiadaWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<alphabet> alphabet
        {
            get
            {
                if ((_alphabet == null))
                {
                    _alphabet = base.CreateObjectSet<alphabet>("alphabet");
                }
                return _alphabet;
            }
        }
        private ObjectSet<alphabet> _alphabet;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<binary_characteristic> binary_characteristic
        {
            get
            {
                if ((_binary_characteristic == null))
                {
                    _binary_characteristic = base.CreateObjectSet<binary_characteristic>("binary_characteristic");
                }
                return _binary_characteristic;
            }
        }
        private ObjectSet<binary_characteristic> _binary_characteristic;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<building> building
        {
            get
            {
                if ((_building == null))
                {
                    _building = base.CreateObjectSet<building>("building");
                }
                return _building;
            }
        }
        private ObjectSet<building> _building;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<building_type> building_type
        {
            get
            {
                if ((_building_type == null))
                {
                    _building_type = base.CreateObjectSet<building_type>("building_type");
                }
                return _building_type;
            }
        }
        private ObjectSet<building_type> _building_type;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<catalog_table> catalog_table
        {
            get
            {
                if ((_catalog_table == null))
                {
                    _catalog_table = base.CreateObjectSet<catalog_table>("catalog_table");
                }
                return _catalog_table;
            }
        }
        private ObjectSet<catalog_table> _catalog_table;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<chain> chain
        {
            get
            {
                if ((_chain == null))
                {
                    _chain = base.CreateObjectSet<chain>("chain");
                }
                return _chain;
            }
        }
        private ObjectSet<chain> _chain;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<characteristic> characteristic
        {
            get
            {
                if ((_characteristic == null))
                {
                    _characteristic = base.CreateObjectSet<characteristic>("characteristic");
                }
                return _characteristic;
            }
        }
        private ObjectSet<characteristic> _characteristic;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<characteristic_group> characteristic_group
        {
            get
            {
                if ((_characteristic_group == null))
                {
                    _characteristic_group = base.CreateObjectSet<characteristic_group>("characteristic_group");
                }
                return _characteristic_group;
            }
        }
        private ObjectSet<characteristic_group> _characteristic_group;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<characteristic_type> characteristic_type
        {
            get
            {
                if ((_characteristic_type == null))
                {
                    _characteristic_type = base.CreateObjectSet<characteristic_type>("characteristic_type");
                }
                return _characteristic_type;
            }
        }
        private ObjectSet<characteristic_type> _characteristic_type;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<connection> connection
        {
            get
            {
                if ((_connection == null))
                {
                    _connection = base.CreateObjectSet<connection>("connection");
                }
                return _connection;
            }
        }
        private ObjectSet<connection> _connection;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<connection_type> connection_type
        {
            get
            {
                if ((_connection_type == null))
                {
                    _connection_type = base.CreateObjectSet<connection_type>("connection_type");
                }
                return _connection_type;
            }
        }
        private ObjectSet<connection_type> _connection_type;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<dna_information> dna_information
        {
            get
            {
                if ((_dna_information == null))
                {
                    _dna_information = base.CreateObjectSet<dna_information>("dna_information");
                }
                return _dna_information;
            }
        }
        private ObjectSet<dna_information> _dna_information;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<element> element
        {
            get
            {
                if ((_element == null))
                {
                    _element = base.CreateObjectSet<element>("element");
                }
                return _element;
            }
        }
        private ObjectSet<element> _element;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<link_up> link_up
        {
            get
            {
                if ((_link_up == null))
                {
                    _link_up = base.CreateObjectSet<link_up>("link_up");
                }
                return _link_up;
            }
        }
        private ObjectSet<link_up> _link_up;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<matter> matter
        {
            get
            {
                if ((_matter == null))
                {
                    _matter = base.CreateObjectSet<matter>("matter");
                }
                return _matter;
            }
        }
        private ObjectSet<matter> _matter;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<nature> nature
        {
            get
            {
                if ((_nature == null))
                {
                    _nature = base.CreateObjectSet<nature>("nature");
                }
                return _nature;
            }
        }
        private ObjectSet<nature> _nature;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<notation> notation
        {
            get
            {
                if ((_notation == null))
                {
                    _notation = base.CreateObjectSet<notation>("notation");
                }
                return _notation;
            }
        }
        private ObjectSet<notation> _notation;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<piece_type> piece_type
        {
            get
            {
                if ((_piece_type == null))
                {
                    _piece_type = base.CreateObjectSet<piece_type>("piece_type");
                }
                return _piece_type;
            }
        }
        private ObjectSet<piece_type> _piece_type;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<remote_db> remote_db
        {
            get
            {
                if ((_remote_db == null))
                {
                    _remote_db = base.CreateObjectSet<remote_db>("remote_db");
                }
                return _remote_db;
            }
        }
        private ObjectSet<remote_db> _remote_db;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet alphabet. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToalphabet(alphabet alphabet)
        {
            base.AddObject("alphabet", alphabet);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet binary_characteristic. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTobinary_characteristic(binary_characteristic binary_characteristic)
        {
            base.AddObject("binary_characteristic", binary_characteristic);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet building. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTobuilding(building building)
        {
            base.AddObject("building", building);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet building_type. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTobuilding_type(building_type building_type)
        {
            base.AddObject("building_type", building_type);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet catalog_table. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTocatalog_table(catalog_table catalog_table)
        {
            base.AddObject("catalog_table", catalog_table);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet chain. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTochain(chain chain)
        {
            base.AddObject("chain", chain);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet characteristic. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTocharacteristic(characteristic characteristic)
        {
            base.AddObject("characteristic", characteristic);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet characteristic_group. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTocharacteristic_group(characteristic_group characteristic_group)
        {
            base.AddObject("characteristic_group", characteristic_group);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet characteristic_type. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTocharacteristic_type(characteristic_type characteristic_type)
        {
            base.AddObject("characteristic_type", characteristic_type);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet connection. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToconnection(connection connection)
        {
            base.AddObject("connection", connection);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet connection_type. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToconnection_type(connection_type connection_type)
        {
            base.AddObject("connection_type", connection_type);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet dna_information. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTodna_information(dna_information dna_information)
        {
            base.AddObject("dna_information", dna_information);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet element. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToelement(element element)
        {
            base.AddObject("element", element);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet link_up. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTolink_up(link_up link_up)
        {
            base.AddObject("link_up", link_up);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet matter. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTomatter(matter matter)
        {
            base.AddObject("matter", matter);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet nature. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTonature(nature nature)
        {
            base.AddObject("nature", nature);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet notation. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTonotation(notation notation)
        {
            base.AddObject("notation", notation);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet piece_type. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTopiece_type(piece_type piece_type)
        {
            base.AddObject("piece_type", piece_type);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet remote_db. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToremote_db(remote_db remote_db)
        {
            base.AddObject("remote_db", remote_db);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="alphabet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class alphabet : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта alphabet.
        /// </summary>
        /// <param name="chain_id">Исходное значение свойства chain_id.</param>
        /// <param name="element_id">Исходное значение свойства element_id.</param>
        /// <param name="number">Исходное значение свойства number.</param>
        public static alphabet Createalphabet(global::System.Int64 chain_id, global::System.Int64 element_id, global::System.Int32 number)
        {
            alphabet alphabet = new alphabet();
            alphabet.chain_id = chain_id;
            alphabet.element_id = element_id;
            alphabet.number = number;
            return alphabet;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 chain_id
        {
            get
            {
                return _chain_id;
            }
            set
            {
                if (_chain_id != value)
                {
                    Onchain_idChanging(value);
                    ReportPropertyChanging("chain_id");
                    _chain_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("chain_id");
                    Onchain_idChanged();
                }
            }
        }
        private global::System.Int64 _chain_id;
        partial void Onchain_idChanging(global::System.Int64 value);
        partial void Onchain_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 element_id
        {
            get
            {
                return _element_id;
            }
            set
            {
                if (_element_id != value)
                {
                    Onelement_idChanging(value);
                    ReportPropertyChanging("element_id");
                    _element_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("element_id");
                    Onelement_idChanged();
                }
            }
        }
        private global::System.Int64 _element_id;
        partial void Onelement_idChanging(global::System.Int64 value);
        partial void Onelement_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 number
        {
            get
            {
                return _number;
            }
            set
            {
                if (_number != value)
                {
                    OnnumberChanging(value);
                    ReportPropertyChanging("number");
                    _number = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("number");
                    OnnumberChanged();
                }
            }
        }
        private global::System.Int32 _number;
        partial void OnnumberChanging(global::System.Int32 value);
        partial void OnnumberChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_alphabet_chain", "chain")]
        public chain chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_alphabet_chain", "chain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_alphabet_chain", "chain").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<chain> chainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_alphabet_chain", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<chain>("LibiadaWebModel.fk_alphabet_chain", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_alphabet_element", "element")]
        public element element
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_alphabet_element", "element").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_alphabet_element", "element").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<element> elementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_alphabet_element", "element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<element>("LibiadaWebModel.fk_alphabet_element", "element", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="binary_characteristic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class binary_characteristic : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта binary_characteristic.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="chain_id">Исходное значение свойства chain_id.</param>
        /// <param name="characteristic_type_id">Исходное значение свойства characteristic_type_id.</param>
        /// <param name="link_up_id">Исходное значение свойства link_up_id.</param>
        /// <param name="creation_date">Исходное значение свойства creation_date.</param>
        /// <param name="first_element_id">Исходное значение свойства first_element_id.</param>
        /// <param name="second_element_id">Исходное значение свойства second_element_id.</param>
        public static binary_characteristic Createbinary_characteristic(global::System.Int64 id, global::System.Int64 chain_id, global::System.Int32 characteristic_type_id, global::System.Int32 link_up_id, global::System.DateTimeOffset creation_date, global::System.Int64 first_element_id, global::System.Int64 second_element_id)
        {
            binary_characteristic binary_characteristic = new binary_characteristic();
            binary_characteristic.id = id;
            binary_characteristic.chain_id = chain_id;
            binary_characteristic.characteristic_type_id = characteristic_type_id;
            binary_characteristic.link_up_id = link_up_id;
            binary_characteristic.creation_date = creation_date;
            binary_characteristic.first_element_id = first_element_id;
            binary_characteristic.second_element_id = second_element_id;
            return binary_characteristic;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 chain_id
        {
            get
            {
                return _chain_id;
            }
            set
            {
                Onchain_idChanging(value);
                ReportPropertyChanging("chain_id");
                _chain_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("chain_id");
                Onchain_idChanged();
            }
        }
        private global::System.Int64 _chain_id;
        partial void Onchain_idChanging(global::System.Int64 value);
        partial void Onchain_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 characteristic_type_id
        {
            get
            {
                return _characteristic_type_id;
            }
            set
            {
                Oncharacteristic_type_idChanging(value);
                ReportPropertyChanging("characteristic_type_id");
                _characteristic_type_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("characteristic_type_id");
                Oncharacteristic_type_idChanged();
            }
        }
        private global::System.Int32 _characteristic_type_id;
        partial void Oncharacteristic_type_idChanging(global::System.Int32 value);
        partial void Oncharacteristic_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private Nullable<global::System.Double> _value;
        partial void OnvalueChanging(Nullable<global::System.Double> value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value_string
        {
            get
            {
                return _value_string;
            }
            set
            {
                Onvalue_stringChanging(value);
                ReportPropertyChanging("value_string");
                _value_string = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value_string");
                Onvalue_stringChanged();
            }
        }
        private global::System.String _value_string;
        partial void Onvalue_stringChanging(global::System.String value);
        partial void Onvalue_stringChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 link_up_id
        {
            get
            {
                return _link_up_id;
            }
            set
            {
                Onlink_up_idChanging(value);
                ReportPropertyChanging("link_up_id");
                _link_up_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("link_up_id");
                Onlink_up_idChanged();
            }
        }
        private global::System.Int32 _link_up_id;
        partial void Onlink_up_idChanging(global::System.Int32 value);
        partial void Onlink_up_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset creation_date
        {
            get
            {
                return _creation_date;
            }
            set
            {
                Oncreation_dateChanging(value);
                ReportPropertyChanging("creation_date");
                _creation_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("creation_date");
                Oncreation_dateChanged();
            }
        }
        private global::System.DateTimeOffset _creation_date;
        partial void Oncreation_dateChanging(global::System.DateTimeOffset value);
        partial void Oncreation_dateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 first_element_id
        {
            get
            {
                return _first_element_id;
            }
            set
            {
                Onfirst_element_idChanging(value);
                ReportPropertyChanging("first_element_id");
                _first_element_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("first_element_id");
                Onfirst_element_idChanged();
            }
        }
        private global::System.Int64 _first_element_id;
        partial void Onfirst_element_idChanging(global::System.Int64 value);
        partial void Onfirst_element_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 second_element_id
        {
            get
            {
                return _second_element_id;
            }
            set
            {
                Onsecond_element_idChanging(value);
                ReportPropertyChanging("second_element_id");
                _second_element_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("second_element_id");
                Onsecond_element_idChanged();
            }
        }
        private global::System.Int64 _second_element_id;
        partial void Onsecond_element_idChanging(global::System.Int64 value);
        partial void Onsecond_element_idChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_chain", "chain")]
        public chain chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_binary_characteristic_chain", "chain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_binary_characteristic_chain", "chain").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<chain> chainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_binary_characteristic_chain", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<chain>("LibiadaWebModel.fk_binary_characteristic_chain", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_first_element", "element")]
        public element element
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_first_element", "element").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_first_element", "element").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<element> elementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_first_element", "element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_first_element", "element", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_link_up", "link_up")]
        public link_up link_up
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link_up>("LibiadaWebModel.fk_binary_characteristic_link_up", "link_up").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link_up>("LibiadaWebModel.fk_binary_characteristic_link_up", "link_up").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<link_up> link_upReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link_up>("LibiadaWebModel.fk_binary_characteristic_link_up", "link_up");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<link_up>("LibiadaWebModel.fk_binary_characteristic_link_up", "link_up", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_second_element", "element")]
        public element element1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_second_element", "element").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_second_element", "element").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<element> element1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_second_element", "element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_second_element", "element", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_type1", "characteristic_type")]
        public characteristic_type characteristic_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type1", "characteristic_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type1", "characteristic_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<characteristic_type> characteristic_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type1", "characteristic_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type1", "characteristic_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="building")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class building : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта building.
        /// </summary>
        /// <param name="chain_id">Исходное значение свойства chain_id.</param>
        /// <param name="index">Исходное значение свойства index.</param>
        /// <param name="number">Исходное значение свойства number.</param>
        public static building Createbuilding(global::System.Int64 chain_id, global::System.Int32 index, global::System.Int32 number)
        {
            building building = new building();
            building.chain_id = chain_id;
            building.index = index;
            building.number = number;
            return building;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 chain_id
        {
            get
            {
                return _chain_id;
            }
            set
            {
                if (_chain_id != value)
                {
                    Onchain_idChanging(value);
                    ReportPropertyChanging("chain_id");
                    _chain_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("chain_id");
                    Onchain_idChanged();
                }
            }
        }
        private global::System.Int64 _chain_id;
        partial void Onchain_idChanging(global::System.Int64 value);
        partial void Onchain_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 index
        {
            get
            {
                return _index;
            }
            set
            {
                if (_index != value)
                {
                    OnindexChanging(value);
                    ReportPropertyChanging("index");
                    _index = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("index");
                    OnindexChanged();
                }
            }
        }
        private global::System.Int32 _index;
        partial void OnindexChanging(global::System.Int32 value);
        partial void OnindexChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 number
        {
            get
            {
                return _number;
            }
            set
            {
                if (_number != value)
                {
                    OnnumberChanging(value);
                    ReportPropertyChanging("number");
                    _number = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("number");
                    OnnumberChanged();
                }
            }
        }
        private global::System.Int32 _number;
        partial void OnnumberChanging(global::System.Int32 value);
        partial void OnnumberChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_building_chain", "chain")]
        public chain chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_building_chain", "chain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_building_chain", "chain").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<chain> chainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_building_chain", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<chain>("LibiadaWebModel.fk_building_chain", "chain", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="building_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class building_type : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта building_type.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static building_type Createbuilding_type(global::System.Int32 id, global::System.String name)
        {
            building_type building_type = new building_type();
            building_type.id = id;
            building_type.name = name;
            return building_type;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_building_type", "chain")]
        public EntityCollection<chain> chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<chain>("LibiadaWebModel.fk_chain_building_type", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<chain>("LibiadaWebModel.fk_chain_building_type", "chain", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="catalog_table")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class catalog_table : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта catalog_table.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static catalog_table Createcatalog_table(global::System.Int32 id, global::System.String name)
        {
            catalog_table catalog_table = new catalog_table();
            catalog_table.id = id;
            catalog_table.name = name;
            return catalog_table;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="chain")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class chain : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта chain.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="building_type_id">Исходное значение свойства building_type_id.</param>
        /// <param name="notation_id">Исходное значение свойства notation_id.</param>
        /// <param name="creation_date">Исходное значение свойства creation_date.</param>
        /// <param name="matter_id">Исходное значение свойства matter_id.</param>
        /// <param name="dissimilar">Исходное значение свойства dissimilar.</param>
        /// <param name="piece_type_id">Исходное значение свойства piece_type_id.</param>
        /// <param name="piece_position">Исходное значение свойства piece_position.</param>
        public static chain Createchain(global::System.Int64 id, global::System.Int32 building_type_id, global::System.Int32 notation_id, global::System.DateTimeOffset creation_date, global::System.Int64 matter_id, global::System.Boolean dissimilar, global::System.Int32 piece_type_id, global::System.Int64 piece_position)
        {
            chain chain = new chain();
            chain.id = id;
            chain.building_type_id = building_type_id;
            chain.notation_id = notation_id;
            chain.creation_date = creation_date;
            chain.matter_id = matter_id;
            chain.dissimilar = dissimilar;
            chain.piece_type_id = piece_type_id;
            chain.piece_position = piece_position;
            return chain;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 building_type_id
        {
            get
            {
                return _building_type_id;
            }
            set
            {
                Onbuilding_type_idChanging(value);
                ReportPropertyChanging("building_type_id");
                _building_type_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("building_type_id");
                Onbuilding_type_idChanged();
            }
        }
        private global::System.Int32 _building_type_id;
        partial void Onbuilding_type_idChanging(global::System.Int32 value);
        partial void Onbuilding_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notation_id
        {
            get
            {
                return _notation_id;
            }
            set
            {
                Onnotation_idChanging(value);
                ReportPropertyChanging("notation_id");
                _notation_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("notation_id");
                Onnotation_idChanged();
            }
        }
        private global::System.Int32 _notation_id;
        partial void Onnotation_idChanging(global::System.Int32 value);
        partial void Onnotation_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset creation_date
        {
            get
            {
                return _creation_date;
            }
            set
            {
                Oncreation_dateChanging(value);
                ReportPropertyChanging("creation_date");
                _creation_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("creation_date");
                Oncreation_dateChanged();
            }
        }
        private global::System.DateTimeOffset _creation_date;
        partial void Oncreation_dateChanging(global::System.DateTimeOffset value);
        partial void Oncreation_dateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 matter_id
        {
            get
            {
                return _matter_id;
            }
            set
            {
                Onmatter_idChanging(value);
                ReportPropertyChanging("matter_id");
                _matter_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("matter_id");
                Onmatter_idChanged();
            }
        }
        private global::System.Int64 _matter_id;
        partial void Onmatter_idChanging(global::System.Int64 value);
        partial void Onmatter_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean dissimilar
        {
            get
            {
                return _dissimilar;
            }
            set
            {
                OndissimilarChanging(value);
                ReportPropertyChanging("dissimilar");
                _dissimilar = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dissimilar");
                OndissimilarChanged();
            }
        }
        private global::System.Boolean _dissimilar;
        partial void OndissimilarChanging(global::System.Boolean value);
        partial void OndissimilarChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 piece_type_id
        {
            get
            {
                return _piece_type_id;
            }
            set
            {
                Onpiece_type_idChanging(value);
                ReportPropertyChanging("piece_type_id");
                _piece_type_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("piece_type_id");
                Onpiece_type_idChanged();
            }
        }
        private global::System.Int32 _piece_type_id;
        partial void Onpiece_type_idChanging(global::System.Int32 value);
        partial void Onpiece_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 piece_position
        {
            get
            {
                return _piece_position;
            }
            set
            {
                Onpiece_positionChanging(value);
                ReportPropertyChanging("piece_position");
                _piece_position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("piece_position");
                Onpiece_positionChanged();
            }
        }
        private global::System.Int64 _piece_position;
        partial void Onpiece_positionChanging(global::System.Int64 value);
        partial void Onpiece_positionChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_alphabet_chain", "alphabet")]
        public EntityCollection<alphabet> alphabet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<alphabet>("LibiadaWebModel.fk_alphabet_chain", "alphabet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<alphabet>("LibiadaWebModel.fk_alphabet_chain", "alphabet", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_chain", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_chain", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_chain", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_building_chain", "building")]
        public EntityCollection<building> building
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<building>("LibiadaWebModel.fk_building_chain", "building");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<building>("LibiadaWebModel.fk_building_chain", "building", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_building_type", "building_type")]
        public building_type building_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<building_type>("LibiadaWebModel.fk_chain_building_type", "building_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<building_type>("LibiadaWebModel.fk_chain_building_type", "building_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<building_type> building_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<building_type>("LibiadaWebModel.fk_chain_building_type", "building_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<building_type>("LibiadaWebModel.fk_chain_building_type", "building_type", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_matter", "matter")]
        public matter matter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_chain_matter", "matter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_chain_matter", "matter").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matter> matterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_chain_matter", "matter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matter>("LibiadaWebModel.fk_chain_matter", "matter", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_notation", "notation")]
        public notation notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_chain_notation", "notation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_chain_notation", "notation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notation> notationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_chain_notation", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notation>("LibiadaWebModel.fk_chain_notation", "notation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_piece_type", "piece_type")]
        public piece_type piece_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_chain_piece_type", "piece_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_chain_piece_type", "piece_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<piece_type> piece_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_chain_piece_type", "piece_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<piece_type>("LibiadaWebModel.fk_chain_piece_type", "piece_type", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_chain", "characteristic")]
        public EntityCollection<characteristic> characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_chain", "characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_chain", "characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_child_chain", "connection")]
        public EntityCollection<connection> connection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<connection>("LibiadaWebModel.fk_child_chain", "connection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<connection>("LibiadaWebModel.fk_child_chain", "connection", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_parent_chain", "connection")]
        public EntityCollection<connection> connection1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<connection>("LibiadaWebModel.fk_parent_chain", "connection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<connection>("LibiadaWebModel.fk_parent_chain", "connection", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="characteristic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class characteristic : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта characteristic.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="chain_id">Исходное значение свойства chain_id.</param>
        /// <param name="characteristic_type_id">Исходное значение свойства characteristic_type_id.</param>
        /// <param name="link_up_id">Исходное значение свойства link_up_id.</param>
        /// <param name="creation_date">Исходное значение свойства creation_date.</param>
        public static characteristic Createcharacteristic(global::System.Int64 id, global::System.Int64 chain_id, global::System.Int32 characteristic_type_id, global::System.Int32 link_up_id, global::System.DateTimeOffset creation_date)
        {
            characteristic characteristic = new characteristic();
            characteristic.id = id;
            characteristic.chain_id = chain_id;
            characteristic.characteristic_type_id = characteristic_type_id;
            characteristic.link_up_id = link_up_id;
            characteristic.creation_date = creation_date;
            return characteristic;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 chain_id
        {
            get
            {
                return _chain_id;
            }
            set
            {
                Onchain_idChanging(value);
                ReportPropertyChanging("chain_id");
                _chain_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("chain_id");
                Onchain_idChanged();
            }
        }
        private global::System.Int64 _chain_id;
        partial void Onchain_idChanging(global::System.Int64 value);
        partial void Onchain_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 characteristic_type_id
        {
            get
            {
                return _characteristic_type_id;
            }
            set
            {
                Oncharacteristic_type_idChanging(value);
                ReportPropertyChanging("characteristic_type_id");
                _characteristic_type_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("characteristic_type_id");
                Oncharacteristic_type_idChanged();
            }
        }
        private global::System.Int32 _characteristic_type_id;
        partial void Oncharacteristic_type_idChanging(global::System.Int32 value);
        partial void Oncharacteristic_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private Nullable<global::System.Double> _value;
        partial void OnvalueChanging(Nullable<global::System.Double> value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value_string
        {
            get
            {
                return _value_string;
            }
            set
            {
                Onvalue_stringChanging(value);
                ReportPropertyChanging("value_string");
                _value_string = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value_string");
                Onvalue_stringChanged();
            }
        }
        private global::System.String _value_string;
        partial void Onvalue_stringChanging(global::System.String value);
        partial void Onvalue_stringChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 link_up_id
        {
            get
            {
                return _link_up_id;
            }
            set
            {
                Onlink_up_idChanging(value);
                ReportPropertyChanging("link_up_id");
                _link_up_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("link_up_id");
                Onlink_up_idChanged();
            }
        }
        private global::System.Int32 _link_up_id;
        partial void Onlink_up_idChanging(global::System.Int32 value);
        partial void Onlink_up_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset creation_date
        {
            get
            {
                return _creation_date;
            }
            set
            {
                Oncreation_dateChanging(value);
                ReportPropertyChanging("creation_date");
                _creation_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("creation_date");
                Oncreation_dateChanged();
            }
        }
        private global::System.DateTimeOffset _creation_date;
        partial void Oncreation_dateChanging(global::System.DateTimeOffset value);
        partial void Oncreation_dateChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_chain", "chain")]
        public chain chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_characteristic_chain", "chain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_characteristic_chain", "chain").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<chain> chainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_characteristic_chain", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<chain>("LibiadaWebModel.fk_characteristic_chain", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_link_up", "link_up")]
        public link_up link_up
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link_up>("LibiadaWebModel.fk_characteristic_link_up", "link_up").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link_up>("LibiadaWebModel.fk_characteristic_link_up", "link_up").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<link_up> link_upReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link_up>("LibiadaWebModel.fk_characteristic_link_up", "link_up");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<link_up>("LibiadaWebModel.fk_characteristic_link_up", "link_up", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_type", "characteristic_type")]
        public characteristic_type characteristic_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type", "characteristic_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type", "characteristic_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<characteristic_type> characteristic_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type", "characteristic_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type", "characteristic_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="characteristic_group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class characteristic_group : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта characteristic_group.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static characteristic_group Createcharacteristic_group(global::System.Int32 id, global::System.String name)
        {
            characteristic_group characteristic_group = new characteristic_group();
            characteristic_group.id = id;
            characteristic_group.name = name;
            return characteristic_group;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_group", "characteristic_type")]
        public EntityCollection<characteristic_type> characteristic_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic_type>("LibiadaWebModel.fk_characteristic_group", "characteristic_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic_type>("LibiadaWebModel.fk_characteristic_group", "characteristic_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="characteristic_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class characteristic_type : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта characteristic_type.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="class_name">Исходное значение свойства class_name.</param>
        public static characteristic_type Createcharacteristic_type(global::System.Int32 id, global::System.String name, global::System.String class_name)
        {
            characteristic_type characteristic_type = new characteristic_type();
            characteristic_type.id = id;
            characteristic_type.name = name;
            characteristic_type.class_name = class_name;
            return characteristic_type;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> characteristic_group_id
        {
            get
            {
                return _characteristic_group_id;
            }
            set
            {
                Oncharacteristic_group_idChanging(value);
                ReportPropertyChanging("characteristic_group_id");
                _characteristic_group_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("characteristic_group_id");
                Oncharacteristic_group_idChanged();
            }
        }
        private Nullable<global::System.Int32> _characteristic_group_id;
        partial void Oncharacteristic_group_idChanging(Nullable<global::System.Int32> value);
        partial void Oncharacteristic_group_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String class_name
        {
            get
            {
                return _class_name;
            }
            set
            {
                Onclass_nameChanging(value);
                ReportPropertyChanging("class_name");
                _class_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("class_name");
                Onclass_nameChanged();
            }
        }
        private global::System.String _class_name;
        partial void Onclass_nameChanging(global::System.String value);
        partial void Onclass_nameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_type1", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_characteristic_type1", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_characteristic_type1", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_type", "characteristic")]
        public EntityCollection<characteristic> characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_type", "characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_type", "characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_group", "characteristic_group")]
        public characteristic_group characteristic_group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_group>("LibiadaWebModel.fk_characteristic_group", "characteristic_group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_group>("LibiadaWebModel.fk_characteristic_group", "characteristic_group").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<characteristic_group> characteristic_groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_group>("LibiadaWebModel.fk_characteristic_group", "characteristic_group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<characteristic_group>("LibiadaWebModel.fk_characteristic_group", "characteristic_group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="connection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class connection : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта connection.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="parent_chain_id">Исходное значение свойства parent_chain_id.</param>
        /// <param name="child_chain_id">Исходное значение свойства child_chain_id.</param>
        /// <param name="connection_type_id">Исходное значение свойства connection_type_id.</param>
        public static connection Createconnection(global::System.Int64 id, global::System.Int64 parent_chain_id, global::System.Int64 child_chain_id, global::System.Int32 connection_type_id)
        {
            connection connection = new connection();
            connection.id = id;
            connection.parent_chain_id = parent_chain_id;
            connection.child_chain_id = child_chain_id;
            connection.connection_type_id = connection_type_id;
            return connection;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 parent_chain_id
        {
            get
            {
                return _parent_chain_id;
            }
            set
            {
                Onparent_chain_idChanging(value);
                ReportPropertyChanging("parent_chain_id");
                _parent_chain_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("parent_chain_id");
                Onparent_chain_idChanged();
            }
        }
        private global::System.Int64 _parent_chain_id;
        partial void Onparent_chain_idChanging(global::System.Int64 value);
        partial void Onparent_chain_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 child_chain_id
        {
            get
            {
                return _child_chain_id;
            }
            set
            {
                Onchild_chain_idChanging(value);
                ReportPropertyChanging("child_chain_id");
                _child_chain_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("child_chain_id");
                Onchild_chain_idChanged();
            }
        }
        private global::System.Int64 _child_chain_id;
        partial void Onchild_chain_idChanging(global::System.Int64 value);
        partial void Onchild_chain_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connection_type_id
        {
            get
            {
                return _connection_type_id;
            }
            set
            {
                Onconnection_type_idChanging(value);
                ReportPropertyChanging("connection_type_id");
                _connection_type_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("connection_type_id");
                Onconnection_type_idChanged();
            }
        }
        private global::System.Int32 _connection_type_id;
        partial void Onconnection_type_idChanging(global::System.Int32 value);
        partial void Onconnection_type_idChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_child_chain", "chain")]
        public chain chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_child_chain", "chain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_child_chain", "chain").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<chain> chainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_child_chain", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<chain>("LibiadaWebModel.fk_child_chain", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_parent_chain", "chain")]
        public chain chain1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_parent_chain", "chain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_parent_chain", "chain").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<chain> chain1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_parent_chain", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<chain>("LibiadaWebModel.fk_parent_chain", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_connection_type", "connection_type")]
        public connection_type connection_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<connection_type>("LibiadaWebModel.fk_connection_type", "connection_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<connection_type>("LibiadaWebModel.fk_connection_type", "connection_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<connection_type> connection_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<connection_type>("LibiadaWebModel.fk_connection_type", "connection_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<connection_type>("LibiadaWebModel.fk_connection_type", "connection_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="connection_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class connection_type : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта connection_type.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static connection_type Createconnection_type(global::System.Int32 id, global::System.String name)
        {
            connection_type connection_type = new connection_type();
            connection_type.id = id;
            connection_type.name = name;
            return connection_type;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_connection_type", "connection")]
        public EntityCollection<connection> connection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<connection>("LibiadaWebModel.fk_connection_type", "connection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<connection>("LibiadaWebModel.fk_connection_type", "connection", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="dna_information")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dna_information : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта dna_information.
        /// </summary>
        /// <param name="matter_id">Исходное значение свойства matter_id.</param>
        public static dna_information Createdna_information(global::System.Int64 matter_id)
        {
            dna_information dna_information = new dna_information();
            dna_information.matter_id = matter_id;
            return dna_information;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 matter_id
        {
            get
            {
                return _matter_id;
            }
            set
            {
                if (_matter_id != value)
                {
                    Onmatter_idChanging(value);
                    ReportPropertyChanging("matter_id");
                    _matter_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("matter_id");
                    Onmatter_idChanged();
                }
            }
        }
        private global::System.Int64 _matter_id;
        partial void Onmatter_idChanging(global::System.Int64 value);
        partial void Onmatter_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fasta_header
        {
            get
            {
                return _fasta_header;
            }
            set
            {
                Onfasta_headerChanging(value);
                ReportPropertyChanging("fasta_header");
                _fasta_header = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fasta_header");
                Onfasta_headerChanged();
            }
        }
        private global::System.String _fasta_header;
        partial void Onfasta_headerChanging(global::System.String value);
        partial void Onfasta_headerChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_information_matter", "matter")]
        public matter matter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_dna_information_matter", "matter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_dna_information_matter", "matter").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matter> matterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_dna_information_matter", "matter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matter>("LibiadaWebModel.fk_dna_information_matter", "matter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="element")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class element : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта element.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="notation_id">Исходное значение свойства notation_id.</param>
        public static element Createelement(global::System.Int64 id, global::System.Int32 notation_id)
        {
            element element = new element();
            element.id = id;
            element.notation_id = notation_id;
            return element;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notation_id
        {
            get
            {
                return _notation_id;
            }
            set
            {
                Onnotation_idChanging(value);
                ReportPropertyChanging("notation_id");
                _notation_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("notation_id");
                Onnotation_idChanged();
            }
        }
        private global::System.Int32 _notation_id;
        partial void Onnotation_idChanging(global::System.Int32 value);
        partial void Onnotation_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> creation_date
        {
            get
            {
                return _creation_date;
            }
            set
            {
                Oncreation_dateChanging(value);
                ReportPropertyChanging("creation_date");
                _creation_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("creation_date");
                Oncreation_dateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _creation_date;
        partial void Oncreation_dateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void Oncreation_dateChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_alphabet_element", "alphabet")]
        public EntityCollection<alphabet> alphabet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<alphabet>("LibiadaWebModel.fk_alphabet_element", "alphabet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<alphabet>("LibiadaWebModel.fk_alphabet_element", "alphabet", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_first_element", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_first_element", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_first_element", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_second_element", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_second_element", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_second_element", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_element_notation", "notation")]
        public notation notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_element_notation", "notation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_element_notation", "notation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notation> notationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_element_notation", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notation>("LibiadaWebModel.fk_element_notation", "notation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="link_up")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class link_up : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта link_up.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static link_up Createlink_up(global::System.Int32 id, global::System.String name)
        {
            link_up link_up = new link_up();
            link_up.id = id;
            link_up.name = name;
            return link_up;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_link_up", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_link_up", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_link_up", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_link_up", "characteristic")]
        public EntityCollection<characteristic> characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_link_up", "characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_link_up", "characteristic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="matter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class matter : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта matter.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="nature_id">Исходное значение свойства nature_id.</param>
        public static matter Creatematter(global::System.Int64 id, global::System.Int32 nature_id)
        {
            matter matter = new matter();
            matter.id = id;
            matter.nature_id = nature_id;
            return matter;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nature_id
        {
            get
            {
                return _nature_id;
            }
            set
            {
                Onnature_idChanging(value);
                ReportPropertyChanging("nature_id");
                _nature_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("nature_id");
                Onnature_idChanged();
            }
        }
        private global::System.Int32 _nature_id;
        partial void Onnature_idChanging(global::System.Int32 value);
        partial void Onnature_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> remote_db_id
        {
            get
            {
                return _remote_db_id;
            }
            set
            {
                Onremote_db_idChanging(value);
                ReportPropertyChanging("remote_db_id");
                _remote_db_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("remote_db_id");
                Onremote_db_idChanged();
            }
        }
        private Nullable<global::System.Int32> _remote_db_id;
        partial void Onremote_db_idChanging(Nullable<global::System.Int32> value);
        partial void Onremote_db_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String id_in_remote_db
        {
            get
            {
                return _id_in_remote_db;
            }
            set
            {
                Onid_in_remote_dbChanging(value);
                ReportPropertyChanging("id_in_remote_db");
                _id_in_remote_db = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("id_in_remote_db");
                Onid_in_remote_dbChanged();
            }
        }
        private global::System.String _id_in_remote_db;
        partial void Onid_in_remote_dbChanging(global::System.String value);
        partial void Onid_in_remote_dbChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_matter", "chain")]
        public EntityCollection<chain> chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<chain>("LibiadaWebModel.fk_chain_matter", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<chain>("LibiadaWebModel.fk_chain_matter", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_information_matter", "dna_information")]
        public dna_information dna_information
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dna_information>("LibiadaWebModel.fk_dna_information_matter", "dna_information").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dna_information>("LibiadaWebModel.fk_dna_information_matter", "dna_information").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<dna_information> dna_informationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dna_information>("LibiadaWebModel.fk_dna_information_matter", "dna_information");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<dna_information>("LibiadaWebModel.fk_dna_information_matter", "dna_information", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_matter_nature", "nature")]
        public nature nature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_matter_nature", "nature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_matter_nature", "nature").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<nature> natureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_matter_nature", "nature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<nature>("LibiadaWebModel.fk_matter_nature", "nature", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_matter_remote_db", "remote_db")]
        public remote_db remote_db
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_matter_remote_db", "remote_db").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_matter_remote_db", "remote_db").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<remote_db> remote_dbReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_matter_remote_db", "remote_db");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<remote_db>("LibiadaWebModel.fk_matter_remote_db", "remote_db", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="nature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class nature : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта nature.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static nature Createnature(global::System.Int32 id, global::System.String name)
        {
            nature nature = new nature();
            nature.id = id;
            nature.name = name;
            return nature;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_matter_nature", "matter")]
        public EntityCollection<matter> matter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<matter>("LibiadaWebModel.fk_matter_nature", "matter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<matter>("LibiadaWebModel.fk_matter_nature", "matter", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_notation_nature", "notation")]
        public EntityCollection<notation> notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<notation>("LibiadaWebModel.fk_notation_nature", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<notation>("LibiadaWebModel.fk_notation_nature", "notation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_piece_type_nature", "piece_type")]
        public EntityCollection<piece_type> piece_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<piece_type>("LibiadaWebModel.fk_piece_type_nature", "piece_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<piece_type>("LibiadaWebModel.fk_piece_type_nature", "piece_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="notation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class notation : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта notation.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="nature_id">Исходное значение свойства nature_id.</param>
        public static notation Createnotation(global::System.Int32 id, global::System.String name, global::System.Int32 nature_id)
        {
            notation notation = new notation();
            notation.id = id;
            notation.name = name;
            notation.nature_id = nature_id;
            return notation;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nature_id
        {
            get
            {
                return _nature_id;
            }
            set
            {
                Onnature_idChanging(value);
                ReportPropertyChanging("nature_id");
                _nature_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("nature_id");
                Onnature_idChanged();
            }
        }
        private global::System.Int32 _nature_id;
        partial void Onnature_idChanging(global::System.Int32 value);
        partial void Onnature_idChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_notation", "chain")]
        public EntityCollection<chain> chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<chain>("LibiadaWebModel.fk_chain_notation", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<chain>("LibiadaWebModel.fk_chain_notation", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_element_notation", "element")]
        public EntityCollection<element> element
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<element>("LibiadaWebModel.fk_element_notation", "element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<element>("LibiadaWebModel.fk_element_notation", "element", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_notation_nature", "nature")]
        public nature nature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_notation_nature", "nature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_notation_nature", "nature").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<nature> natureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_notation_nature", "nature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<nature>("LibiadaWebModel.fk_notation_nature", "nature", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="piece_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class piece_type : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта piece_type.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="nature_id">Исходное значение свойства nature_id.</param>
        public static piece_type Createpiece_type(global::System.Int32 id, global::System.String name, global::System.Int32 nature_id)
        {
            piece_type piece_type = new piece_type();
            piece_type.id = id;
            piece_type.name = name;
            piece_type.nature_id = nature_id;
            return piece_type;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nature_id
        {
            get
            {
                return _nature_id;
            }
            set
            {
                Onnature_idChanging(value);
                ReportPropertyChanging("nature_id");
                _nature_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("nature_id");
                Onnature_idChanged();
            }
        }
        private global::System.Int32 _nature_id;
        partial void Onnature_idChanging(global::System.Int32 value);
        partial void Onnature_idChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_piece_type", "chain")]
        public EntityCollection<chain> chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<chain>("LibiadaWebModel.fk_chain_piece_type", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<chain>("LibiadaWebModel.fk_chain_piece_type", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_piece_type_nature", "nature")]
        public nature nature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_piece_type_nature", "nature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_piece_type_nature", "nature").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<nature> natureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_piece_type_nature", "nature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<nature>("LibiadaWebModel.fk_piece_type_nature", "nature", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="remote_db")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class remote_db : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта remote_db.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static remote_db Createremote_db(global::System.Int32 id, global::System.String name)
        {
            remote_db remote_db = new remote_db();
            remote_db.id = id;
            remote_db.name = name;
            return remote_db;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String url
        {
            get
            {
                return _url;
            }
            set
            {
                OnurlChanging(value);
                ReportPropertyChanging("url");
                _url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("url");
                OnurlChanged();
            }
        }
        private global::System.String _url;
        partial void OnurlChanging(global::System.String value);
        partial void OnurlChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_matter_remote_db", "matter")]
        public EntityCollection<matter> matter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<matter>("LibiadaWebModel.fk_matter_remote_db", "matter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<matter>("LibiadaWebModel.fk_matter_remote_db", "matter", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
