//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_first_element", "element", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.element), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_link", "link", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.link), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_second_element", "element", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.element), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_type1", "characteristic_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.characteristic_type), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_chain_matter", "matter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.matter), "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_chain_notation", "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.notation), "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_chain_piece_type", "piece_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.piece_type), "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_link", "link", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.link), "characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_type", "characteristic_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.characteristic_type), "characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_group", "characteristic_group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.characteristic_group), "characteristic_type", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic_type), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_dna_chain_matter", "matter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.matter), "dna_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.dna_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_dna_chain_notation", "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.notation), "dna_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.dna_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_dna_chain_product", "product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.product), "dna_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.dna_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_dna_chain_piece_type", "piece_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.piece_type), "dna_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.dna_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_element_notation", "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.notation), "element", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.element), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_literature_chain_language", "language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.language), "literature_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.literature_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_literature_chain_matter", "matter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.matter), "literature_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.literature_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_literature_chain_notation", "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.notation), "literature_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.literature_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_literature_chain_piece_type", "piece_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.piece_type), "literature_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.literature_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_matter_nature", "nature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.nature), "matter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.matter), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_chain_remote_db", "remote_db", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.remote_db), "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_dna_chain_remote_db", "remote_db", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.remote_db), "dna_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.dna_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_literature_chain_remote_db", "remote_db", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.remote_db), "literature_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.literature_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_music_chain_remote_db", "remote_db", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.remote_db), "music_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.music_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_fmotiv_remote_db", "remote_db", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.remote_db), "fmotiv", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.fmotiv), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_measure_remote_db", "remote_db", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.remote_db), "measure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.measure), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_notation_nature", "nature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.nature), "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.notation), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_product_piece_type", "piece_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.piece_type), "product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.product), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_piece_type_nature", "nature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.nature), "piece_type", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.piece_type), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_chain", "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.chain), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_chain", "chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.chain), "characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_dna_chain", "dna_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.dna_chain), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_dna_chain", "dna_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.dna_chain), "characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_literature_chain", "literature_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.literature_chain), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_congeneric_characteristic_literature_chain", "literature_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.literature_chain), "congeneric_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.congeneric_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_literature_chain", "literature_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.literature_chain), "characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_fmotiv_matter", "matter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.matter), "fmotiv", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.fmotiv), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_fmotiv_notation", "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.notation), "fmotiv", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.fmotiv), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_fmotiv_piece_type", "piece_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.piece_type), "fmotiv", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.fmotiv), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_fmotiv", "fmotiv", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.fmotiv), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_congeneric_characteristic_fmotiv", "fmotiv", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.fmotiv), "congeneric_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.congeneric_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_fmotiv", "fmotiv", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.fmotiv), "characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_congeneric_characteristic_type", "characteristic_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.characteristic_type), "congeneric_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.congeneric_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_congeneric_characteristic_element", "element", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.element), "congeneric_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.congeneric_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_congeneric_characteristic_link", "link", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibiadaWeb.link), "congeneric_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.congeneric_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_measure_matter", "matter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.matter), "measure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.measure), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_measure_notation", "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.notation), "measure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.measure), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_measure_piece_type", "piece_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.piece_type), "measure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.measure), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_measure", "measure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.measure), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_congeneric_characteristic_measure", "measure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.measure), "congeneric_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.congeneric_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_measure", "measure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.measure), "characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_music_chain_matter", "matter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.matter), "music_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.music_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_music_chain_notation", "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.notation), "music_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.music_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_music_chain_piece_type", "piece_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.piece_type), "music_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.music_chain), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_binary_characteristic_music_chain", "music_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.music_chain), "binary_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.binary_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_congeneric_characteristic_music_chain", "music_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.music_chain), "congeneric_characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.congeneric_characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_characteristic_music_chain", "music_chain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.music_chain), "characteristic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.characteristic), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_note_notation", "notation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.notation), "note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.note), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_pitch_note", "note", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.note), "pitch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.pitch), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_pitch_accidental", "accidental", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.accidental), "pitch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.pitch), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_fmotiv_fmotiv_type", "fmotiv_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.fmotiv_type), "fmotiv", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.fmotiv), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_pitch_note_symbol", "note_symbol", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.note_symbol), "pitch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.pitch), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_note_tie", "tie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.tie), "note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.note), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_pitch_instrument", "instrument", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.instrument), "pitch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.pitch), true)]
[assembly: EdmRelationshipAttribute("LibiadaWebModel", "fk_remote_db_nature", "nature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LibiadaWeb.nature), "remote_db", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibiadaWeb.remote_db), true)]

#endregion

namespace LibiadaWeb
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class LibiadaWebEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект LibiadaWebEntities, используя строку соединения из раздела "LibiadaWebEntities" файла конфигурации приложения.
        /// </summary>
        public LibiadaWebEntities() : base("name=LibiadaWebEntities", "LibiadaWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта LibiadaWebEntities.
        /// </summary>
        public LibiadaWebEntities(string connectionString) : base(connectionString, "LibiadaWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта LibiadaWebEntities.
        /// </summary>
        public LibiadaWebEntities(EntityConnection connection) : base(connection, "LibiadaWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<binary_characteristic> binary_characteristic
        {
            get
            {
                if ((_binary_characteristic == null))
                {
                    _binary_characteristic = base.CreateObjectSet<binary_characteristic>("binary_characteristic");
                }
                return _binary_characteristic;
            }
        }
        private ObjectSet<binary_characteristic> _binary_characteristic;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<chain> chain
        {
            get
            {
                if ((_chain == null))
                {
                    _chain = base.CreateObjectSet<chain>("chain");
                }
                return _chain;
            }
        }
        private ObjectSet<chain> _chain;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<characteristic> characteristic
        {
            get
            {
                if ((_characteristic == null))
                {
                    _characteristic = base.CreateObjectSet<characteristic>("characteristic");
                }
                return _characteristic;
            }
        }
        private ObjectSet<characteristic> _characteristic;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<characteristic_group> characteristic_group
        {
            get
            {
                if ((_characteristic_group == null))
                {
                    _characteristic_group = base.CreateObjectSet<characteristic_group>("characteristic_group");
                }
                return _characteristic_group;
            }
        }
        private ObjectSet<characteristic_group> _characteristic_group;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<characteristic_type> characteristic_type
        {
            get
            {
                if ((_characteristic_type == null))
                {
                    _characteristic_type = base.CreateObjectSet<characteristic_type>("characteristic_type");
                }
                return _characteristic_type;
            }
        }
        private ObjectSet<characteristic_type> _characteristic_type;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<dna_chain> dna_chain
        {
            get
            {
                if ((_dna_chain == null))
                {
                    _dna_chain = base.CreateObjectSet<dna_chain>("dna_chain");
                }
                return _dna_chain;
            }
        }
        private ObjectSet<dna_chain> _dna_chain;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<element> element
        {
            get
            {
                if ((_element == null))
                {
                    _element = base.CreateObjectSet<element>("element");
                }
                return _element;
            }
        }
        private ObjectSet<element> _element;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<language> language
        {
            get
            {
                if ((_language == null))
                {
                    _language = base.CreateObjectSet<language>("language");
                }
                return _language;
            }
        }
        private ObjectSet<language> _language;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<link> link
        {
            get
            {
                if ((_link == null))
                {
                    _link = base.CreateObjectSet<link>("link");
                }
                return _link;
            }
        }
        private ObjectSet<link> _link;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<literature_chain> literature_chain
        {
            get
            {
                if ((_literature_chain == null))
                {
                    _literature_chain = base.CreateObjectSet<literature_chain>("literature_chain");
                }
                return _literature_chain;
            }
        }
        private ObjectSet<literature_chain> _literature_chain;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<matter> matter
        {
            get
            {
                if ((_matter == null))
                {
                    _matter = base.CreateObjectSet<matter>("matter");
                }
                return _matter;
            }
        }
        private ObjectSet<matter> _matter;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<nature> nature
        {
            get
            {
                if ((_nature == null))
                {
                    _nature = base.CreateObjectSet<nature>("nature");
                }
                return _nature;
            }
        }
        private ObjectSet<nature> _nature;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<notation> notation
        {
            get
            {
                if ((_notation == null))
                {
                    _notation = base.CreateObjectSet<notation>("notation");
                }
                return _notation;
            }
        }
        private ObjectSet<notation> _notation;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<product> product
        {
            get
            {
                if ((_product == null))
                {
                    _product = base.CreateObjectSet<product>("product");
                }
                return _product;
            }
        }
        private ObjectSet<product> _product;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<piece_type> piece_type
        {
            get
            {
                if ((_piece_type == null))
                {
                    _piece_type = base.CreateObjectSet<piece_type>("piece_type");
                }
                return _piece_type;
            }
        }
        private ObjectSet<piece_type> _piece_type;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<remote_db> remote_db
        {
            get
            {
                if ((_remote_db == null))
                {
                    _remote_db = base.CreateObjectSet<remote_db>("remote_db");
                }
                return _remote_db;
            }
        }
        private ObjectSet<remote_db> _remote_db;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<fmotiv> fmotiv
        {
            get
            {
                if ((_fmotiv == null))
                {
                    _fmotiv = base.CreateObjectSet<fmotiv>("fmotiv");
                }
                return _fmotiv;
            }
        }
        private ObjectSet<fmotiv> _fmotiv;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<congeneric_characteristic> congeneric_characteristic
        {
            get
            {
                if ((_congeneric_characteristic == null))
                {
                    _congeneric_characteristic = base.CreateObjectSet<congeneric_characteristic>("congeneric_characteristic");
                }
                return _congeneric_characteristic;
            }
        }
        private ObjectSet<congeneric_characteristic> _congeneric_characteristic;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<instrument> instrument
        {
            get
            {
                if ((_instrument == null))
                {
                    _instrument = base.CreateObjectSet<instrument>("instrument");
                }
                return _instrument;
            }
        }
        private ObjectSet<instrument> _instrument;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<measure> measure
        {
            get
            {
                if ((_measure == null))
                {
                    _measure = base.CreateObjectSet<measure>("measure");
                }
                return _measure;
            }
        }
        private ObjectSet<measure> _measure;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<music_chain> music_chain
        {
            get
            {
                if ((_music_chain == null))
                {
                    _music_chain = base.CreateObjectSet<music_chain>("music_chain");
                }
                return _music_chain;
            }
        }
        private ObjectSet<music_chain> _music_chain;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<note> note
        {
            get
            {
                if ((_note == null))
                {
                    _note = base.CreateObjectSet<note>("note");
                }
                return _note;
            }
        }
        private ObjectSet<note> _note;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<pitch> pitch
        {
            get
            {
                if ((_pitch == null))
                {
                    _pitch = base.CreateObjectSet<pitch>("pitch");
                }
                return _pitch;
            }
        }
        private ObjectSet<pitch> _pitch;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<accidental> accidental
        {
            get
            {
                if ((_accidental == null))
                {
                    _accidental = base.CreateObjectSet<accidental>("accidental");
                }
                return _accidental;
            }
        }
        private ObjectSet<accidental> _accidental;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<fmotiv_type> fmotiv_type
        {
            get
            {
                if ((_fmotiv_type == null))
                {
                    _fmotiv_type = base.CreateObjectSet<fmotiv_type>("fmotiv_type");
                }
                return _fmotiv_type;
            }
        }
        private ObjectSet<fmotiv_type> _fmotiv_type;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<note_symbol> note_symbol
        {
            get
            {
                if ((_note_symbol == null))
                {
                    _note_symbol = base.CreateObjectSet<note_symbol>("note_symbol");
                }
                return _note_symbol;
            }
        }
        private ObjectSet<note_symbol> _note_symbol;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<tie> tie
        {
            get
            {
                if ((_tie == null))
                {
                    _tie = base.CreateObjectSet<tie>("tie");
                }
                return _tie;
            }
        }
        private ObjectSet<tie> _tie;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet binary_characteristic. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTobinary_characteristic(binary_characteristic binary_characteristic)
        {
            base.AddObject("binary_characteristic", binary_characteristic);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet chain. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTochain(chain chain)
        {
            base.AddObject("chain", chain);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet characteristic. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTocharacteristic(characteristic characteristic)
        {
            base.AddObject("characteristic", characteristic);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet characteristic_group. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTocharacteristic_group(characteristic_group characteristic_group)
        {
            base.AddObject("characteristic_group", characteristic_group);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet characteristic_type. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTocharacteristic_type(characteristic_type characteristic_type)
        {
            base.AddObject("characteristic_type", characteristic_type);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet dna_chain. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTodna_chain(dna_chain dna_chain)
        {
            base.AddObject("dna_chain", dna_chain);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet element. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToelement(element element)
        {
            base.AddObject("element", element);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet language. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTolanguage(language language)
        {
            base.AddObject("language", language);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet link. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTolink(link link)
        {
            base.AddObject("link", link);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet literature_chain. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToliterature_chain(literature_chain literature_chain)
        {
            base.AddObject("literature_chain", literature_chain);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet matter. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTomatter(matter matter)
        {
            base.AddObject("matter", matter);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet nature. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTonature(nature nature)
        {
            base.AddObject("nature", nature);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet notation. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTonotation(notation notation)
        {
            base.AddObject("notation", notation);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet product. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToproduct(product product)
        {
            base.AddObject("product", product);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet piece_type. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTopiece_type(piece_type piece_type)
        {
            base.AddObject("piece_type", piece_type);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet remote_db. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToremote_db(remote_db remote_db)
        {
            base.AddObject("remote_db", remote_db);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet fmotiv. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTofmotiv(fmotiv fmotiv)
        {
            base.AddObject("fmotiv", fmotiv);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet congeneric_characteristic. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTocongeneric_characteristic(congeneric_characteristic congeneric_characteristic)
        {
            base.AddObject("congeneric_characteristic", congeneric_characteristic);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet instrument. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToinstrument(instrument instrument)
        {
            base.AddObject("instrument", instrument);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet measure. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTomeasure(measure measure)
        {
            base.AddObject("measure", measure);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet music_chain. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTomusic_chain(music_chain music_chain)
        {
            base.AddObject("music_chain", music_chain);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet note. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTonote(note note)
        {
            base.AddObject("note", note);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet pitch. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTopitch(pitch pitch)
        {
            base.AddObject("pitch", pitch);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet accidental. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToaccidental(accidental accidental)
        {
            base.AddObject("accidental", accidental);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet fmotiv_type. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTofmotiv_type(fmotiv_type fmotiv_type)
        {
            base.AddObject("fmotiv_type", fmotiv_type);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet note_symbol. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTonote_symbol(note_symbol note_symbol)
        {
            base.AddObject("note_symbol", note_symbol);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet tie. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTotie(tie tie)
        {
            base.AddObject("tie", tie);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="accidental")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class accidental : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта accidental.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static accidental Createaccidental(global::System.Int32 id, global::System.String name)
        {
            accidental accidental = new accidental();
            accidental.id = id;
            accidental.name = name;
            return accidental;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_pitch_accidental", "pitch")]
        public EntityCollection<pitch> pitch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<pitch>("LibiadaWebModel.fk_pitch_accidental", "pitch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<pitch>("LibiadaWebModel.fk_pitch_accidental", "pitch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="binary_characteristic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class binary_characteristic : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта binary_characteristic.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="chain_id">Исходное значение свойства chain_id.</param>
        /// <param name="characteristic_type_id">Исходное значение свойства characteristic_type_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        /// <param name="first_element_id">Исходное значение свойства first_element_id.</param>
        /// <param name="second_element_id">Исходное значение свойства second_element_id.</param>
        public static binary_characteristic Createbinary_characteristic(global::System.Int64 id, global::System.Int64 chain_id, global::System.Int32 characteristic_type_id, global::System.DateTimeOffset created, global::System.Int64 first_element_id, global::System.Int64 second_element_id)
        {
            binary_characteristic binary_characteristic = new binary_characteristic();
            binary_characteristic.id = id;
            binary_characteristic.chain_id = chain_id;
            binary_characteristic.characteristic_type_id = characteristic_type_id;
            binary_characteristic.created = created;
            binary_characteristic.first_element_id = first_element_id;
            binary_characteristic.second_element_id = second_element_id;
            return binary_characteristic;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 chain_id
        {
            get
            {
                return _chain_id;
            }
            set
            {
                Onchain_idChanging(value);
                ReportPropertyChanging("chain_id");
                _chain_id = StructuralObject.SetValidValue(value, "chain_id");
                ReportPropertyChanged("chain_id");
                Onchain_idChanged();
            }
        }
        private global::System.Int64 _chain_id;
        partial void Onchain_idChanging(global::System.Int64 value);
        partial void Onchain_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 characteristic_type_id
        {
            get
            {
                return _characteristic_type_id;
            }
            set
            {
                Oncharacteristic_type_idChanging(value);
                ReportPropertyChanging("characteristic_type_id");
                _characteristic_type_id = StructuralObject.SetValidValue(value, "characteristic_type_id");
                ReportPropertyChanged("characteristic_type_id");
                Oncharacteristic_type_idChanged();
            }
        }
        private global::System.Int32 _characteristic_type_id;
        partial void Oncharacteristic_type_idChanging(global::System.Int32 value);
        partial void Oncharacteristic_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private Nullable<global::System.Double> _value;
        partial void OnvalueChanging(Nullable<global::System.Double> value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value_string
        {
            get
            {
                return _value_string;
            }
            set
            {
                Onvalue_stringChanging(value);
                ReportPropertyChanging("value_string");
                _value_string = StructuralObject.SetValidValue(value, true, "value_string");
                ReportPropertyChanged("value_string");
                Onvalue_stringChanged();
            }
        }
        private global::System.String _value_string;
        partial void Onvalue_stringChanging(global::System.String value);
        partial void Onvalue_stringChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> link_id
        {
            get
            {
                return _link_id;
            }
            set
            {
                Onlink_idChanging(value);
                ReportPropertyChanging("link_id");
                _link_id = StructuralObject.SetValidValue(value, "link_id");
                ReportPropertyChanged("link_id");
                Onlink_idChanged();
            }
        }
        private Nullable<global::System.Int32> _link_id;
        partial void Onlink_idChanging(Nullable<global::System.Int32> value);
        partial void Onlink_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 first_element_id
        {
            get
            {
                return _first_element_id;
            }
            set
            {
                Onfirst_element_idChanging(value);
                ReportPropertyChanging("first_element_id");
                _first_element_id = StructuralObject.SetValidValue(value, "first_element_id");
                ReportPropertyChanged("first_element_id");
                Onfirst_element_idChanged();
            }
        }
        private global::System.Int64 _first_element_id;
        partial void Onfirst_element_idChanging(global::System.Int64 value);
        partial void Onfirst_element_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 second_element_id
        {
            get
            {
                return _second_element_id;
            }
            set
            {
                Onsecond_element_idChanging(value);
                ReportPropertyChanging("second_element_id");
                _second_element_id = StructuralObject.SetValidValue(value, "second_element_id");
                ReportPropertyChanged("second_element_id");
                Onsecond_element_idChanged();
            }
        }
        private global::System.Int64 _second_element_id;
        partial void Onsecond_element_idChanging(global::System.Int64 value);
        partial void Onsecond_element_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_first_element", "element")]
        public element element
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_first_element", "element").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_first_element", "element").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<element> elementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_first_element", "element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_first_element", "element", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_link", "link")]
        public link link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link>("LibiadaWebModel.fk_binary_characteristic_link", "link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link>("LibiadaWebModel.fk_binary_characteristic_link", "link").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<link> linkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link>("LibiadaWebModel.fk_binary_characteristic_link", "link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<link>("LibiadaWebModel.fk_binary_characteristic_link", "link", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_second_element", "element")]
        public element element1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_second_element", "element").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_second_element", "element").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<element> element1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_second_element", "element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<element>("LibiadaWebModel.fk_binary_characteristic_second_element", "element", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_chain", "chain")]
        public chain chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_binary_characteristic_chain", "chain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_binary_characteristic_chain", "chain").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<chain> chainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_binary_characteristic_chain", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<chain>("LibiadaWebModel.fk_binary_characteristic_chain", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_type1", "characteristic_type")]
        public characteristic_type characteristic_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type1", "characteristic_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type1", "characteristic_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<characteristic_type> characteristic_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type1", "characteristic_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type1", "characteristic_type", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="chain")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class chain : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта chain.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="notation_id">Исходное значение свойства notation_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        /// <param name="matter_id">Исходное значение свойства matter_id.</param>
        /// <param name="dissimilar">Исходное значение свойства dissimilar.</param>
        /// <param name="piece_type_id">Исходное значение свойства piece_type_id.</param>
        /// <param name="piece_position">Исходное значение свойства piece_position.</param>
        public static chain Createchain(global::System.Int64 id, global::System.Int32 notation_id, global::System.DateTimeOffset created, global::System.Int64 matter_id, global::System.Boolean dissimilar, global::System.Int32 piece_type_id, global::System.Int64 piece_position)
        {
            chain chain = new chain();
            chain.id = id;
            chain.notation_id = notation_id;
            chain.created = created;
            chain.matter_id = matter_id;
            chain.dissimilar = dissimilar;
            chain.piece_type_id = piece_type_id;
            chain.piece_position = piece_position;
            return chain;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notation_id
        {
            get
            {
                return _notation_id;
            }
            set
            {
                Onnotation_idChanging(value);
                ReportPropertyChanging("notation_id");
                _notation_id = StructuralObject.SetValidValue(value, "notation_id");
                ReportPropertyChanged("notation_id");
                Onnotation_idChanged();
            }
        }
        private global::System.Int32 _notation_id;
        partial void Onnotation_idChanging(global::System.Int32 value);
        partial void Onnotation_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 matter_id
        {
            get
            {
                return _matter_id;
            }
            set
            {
                Onmatter_idChanging(value);
                ReportPropertyChanging("matter_id");
                _matter_id = StructuralObject.SetValidValue(value, "matter_id");
                ReportPropertyChanged("matter_id");
                Onmatter_idChanged();
            }
        }
        private global::System.Int64 _matter_id;
        partial void Onmatter_idChanging(global::System.Int64 value);
        partial void Onmatter_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean dissimilar
        {
            get
            {
                return _dissimilar;
            }
            set
            {
                OndissimilarChanging(value);
                ReportPropertyChanging("dissimilar");
                _dissimilar = StructuralObject.SetValidValue(value, "dissimilar");
                ReportPropertyChanged("dissimilar");
                OndissimilarChanged();
            }
        }
        private global::System.Boolean _dissimilar;
        partial void OndissimilarChanging(global::System.Boolean value);
        partial void OndissimilarChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 piece_type_id
        {
            get
            {
                return _piece_type_id;
            }
            set
            {
                Onpiece_type_idChanging(value);
                ReportPropertyChanging("piece_type_id");
                _piece_type_id = StructuralObject.SetValidValue(value, "piece_type_id");
                ReportPropertyChanged("piece_type_id");
                Onpiece_type_idChanged();
            }
        }
        private global::System.Int32 _piece_type_id;
        partial void Onpiece_type_idChanging(global::System.Int32 value);
        partial void Onpiece_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 piece_position
        {
            get
            {
                return _piece_position;
            }
            set
            {
                Onpiece_positionChanging(value);
                ReportPropertyChanging("piece_position");
                _piece_position = StructuralObject.SetValidValue(value, "piece_position");
                ReportPropertyChanged("piece_position");
                Onpiece_positionChanged();
            }
        }
        private global::System.Int64 _piece_position;
        partial void Onpiece_positionChanging(global::System.Int64 value);
        partial void Onpiece_positionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> remote_db_id
        {
            get
            {
                return _remote_db_id;
            }
            set
            {
                Onremote_db_idChanging(value);
                ReportPropertyChanging("remote_db_id");
                _remote_db_id = StructuralObject.SetValidValue(value, "remote_db_id");
                ReportPropertyChanged("remote_db_id");
                Onremote_db_idChanged();
            }
        }
        private Nullable<global::System.Int32> _remote_db_id;
        partial void Onremote_db_idChanging(Nullable<global::System.Int32> value);
        partial void Onremote_db_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remote_id
        {
            get
            {
                return _remote_id;
            }
            set
            {
                Onremote_idChanging(value);
                ReportPropertyChanging("remote_id");
                _remote_id = StructuralObject.SetValidValue(value, true, "remote_id");
                ReportPropertyChanged("remote_id");
                Onremote_idChanged();
            }
        }
        private global::System.String _remote_id;
        partial void Onremote_idChanging(global::System.String value);
        partial void Onremote_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_matter", "matter")]
        public matter matter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_chain_matter", "matter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_chain_matter", "matter").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matter> matterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_chain_matter", "matter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matter>("LibiadaWebModel.fk_chain_matter", "matter", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_notation", "notation")]
        public notation notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_chain_notation", "notation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_chain_notation", "notation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notation> notationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_chain_notation", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notation>("LibiadaWebModel.fk_chain_notation", "notation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_piece_type", "piece_type")]
        public piece_type piece_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_chain_piece_type", "piece_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_chain_piece_type", "piece_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<piece_type> piece_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_chain_piece_type", "piece_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<piece_type>("LibiadaWebModel.fk_chain_piece_type", "piece_type", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_chain", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_chain", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_chain", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_chain", "characteristic")]
        public EntityCollection<characteristic> characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_chain", "characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_chain", "characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_remote_db", "remote_db")]
        public remote_db remote_db
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_chain_remote_db", "remote_db").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_chain_remote_db", "remote_db").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<remote_db> remote_dbReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_chain_remote_db", "remote_db");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<remote_db>("LibiadaWebModel.fk_chain_remote_db", "remote_db", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="characteristic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class characteristic : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта characteristic.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="chain_id">Исходное значение свойства chain_id.</param>
        /// <param name="characteristic_type_id">Исходное значение свойства characteristic_type_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        public static characteristic Createcharacteristic(global::System.Int64 id, global::System.Int64 chain_id, global::System.Int32 characteristic_type_id, global::System.DateTimeOffset created)
        {
            characteristic characteristic = new characteristic();
            characteristic.id = id;
            characteristic.chain_id = chain_id;
            characteristic.characteristic_type_id = characteristic_type_id;
            characteristic.created = created;
            return characteristic;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 chain_id
        {
            get
            {
                return _chain_id;
            }
            set
            {
                Onchain_idChanging(value);
                ReportPropertyChanging("chain_id");
                _chain_id = StructuralObject.SetValidValue(value, "chain_id");
                ReportPropertyChanged("chain_id");
                Onchain_idChanged();
            }
        }
        private global::System.Int64 _chain_id;
        partial void Onchain_idChanging(global::System.Int64 value);
        partial void Onchain_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 characteristic_type_id
        {
            get
            {
                return _characteristic_type_id;
            }
            set
            {
                Oncharacteristic_type_idChanging(value);
                ReportPropertyChanging("characteristic_type_id");
                _characteristic_type_id = StructuralObject.SetValidValue(value, "characteristic_type_id");
                ReportPropertyChanged("characteristic_type_id");
                Oncharacteristic_type_idChanged();
            }
        }
        private global::System.Int32 _characteristic_type_id;
        partial void Oncharacteristic_type_idChanging(global::System.Int32 value);
        partial void Oncharacteristic_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private Nullable<global::System.Double> _value;
        partial void OnvalueChanging(Nullable<global::System.Double> value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value_string
        {
            get
            {
                return _value_string;
            }
            set
            {
                Onvalue_stringChanging(value);
                ReportPropertyChanging("value_string");
                _value_string = StructuralObject.SetValidValue(value, true, "value_string");
                ReportPropertyChanged("value_string");
                Onvalue_stringChanged();
            }
        }
        private global::System.String _value_string;
        partial void Onvalue_stringChanging(global::System.String value);
        partial void Onvalue_stringChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> link_id
        {
            get
            {
                return _link_id;
            }
            set
            {
                Onlink_idChanging(value);
                ReportPropertyChanging("link_id");
                _link_id = StructuralObject.SetValidValue(value, "link_id");
                ReportPropertyChanged("link_id");
                Onlink_idChanged();
            }
        }
        private Nullable<global::System.Int32> _link_id;
        partial void Onlink_idChanging(Nullable<global::System.Int32> value);
        partial void Onlink_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_link", "link")]
        public link link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link>("LibiadaWebModel.fk_characteristic_link", "link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link>("LibiadaWebModel.fk_characteristic_link", "link").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<link> linkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link>("LibiadaWebModel.fk_characteristic_link", "link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<link>("LibiadaWebModel.fk_characteristic_link", "link", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_chain", "chain")]
        public chain chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_characteristic_chain", "chain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_characteristic_chain", "chain").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<chain> chainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<chain>("LibiadaWebModel.fk_characteristic_chain", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<chain>("LibiadaWebModel.fk_characteristic_chain", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_type", "characteristic_type")]
        public characteristic_type characteristic_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type", "characteristic_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type", "characteristic_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<characteristic_type> characteristic_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type", "characteristic_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<characteristic_type>("LibiadaWebModel.fk_characteristic_type", "characteristic_type", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="characteristic_group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class characteristic_group : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта characteristic_group.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static characteristic_group Createcharacteristic_group(global::System.Int32 id, global::System.String name)
        {
            characteristic_group characteristic_group = new characteristic_group();
            characteristic_group.id = id;
            characteristic_group.name = name;
            return characteristic_group;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_group", "characteristic_type")]
        public EntityCollection<characteristic_type> characteristic_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic_type>("LibiadaWebModel.fk_characteristic_group", "characteristic_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic_type>("LibiadaWebModel.fk_characteristic_group", "characteristic_type", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="characteristic_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class characteristic_type : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта characteristic_type.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="class_name">Исходное значение свойства class_name.</param>
        /// <param name="linkable">Исходное значение свойства linkable.</param>
        /// <param name="full_chain_applicable">Исходное значение свойства full_chain_applicable.</param>
        /// <param name="congeneric_chain_applicable">Исходное значение свойства congeneric_chain_applicable.</param>
        /// <param name="binary_chain_applicable">Исходное значение свойства binary_chain_applicable.</param>
        public static characteristic_type Createcharacteristic_type(global::System.Int32 id, global::System.String name, global::System.String class_name, global::System.Boolean linkable, global::System.Boolean full_chain_applicable, global::System.Boolean congeneric_chain_applicable, global::System.Boolean binary_chain_applicable)
        {
            characteristic_type characteristic_type = new characteristic_type();
            characteristic_type.id = id;
            characteristic_type.name = name;
            characteristic_type.class_name = class_name;
            characteristic_type.linkable = linkable;
            characteristic_type.full_chain_applicable = full_chain_applicable;
            characteristic_type.congeneric_chain_applicable = congeneric_chain_applicable;
            characteristic_type.binary_chain_applicable = binary_chain_applicable;
            return characteristic_type;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> characteristic_group_id
        {
            get
            {
                return _characteristic_group_id;
            }
            set
            {
                Oncharacteristic_group_idChanging(value);
                ReportPropertyChanging("characteristic_group_id");
                _characteristic_group_id = StructuralObject.SetValidValue(value, "characteristic_group_id");
                ReportPropertyChanged("characteristic_group_id");
                Oncharacteristic_group_idChanged();
            }
        }
        private Nullable<global::System.Int32> _characteristic_group_id;
        partial void Oncharacteristic_group_idChanging(Nullable<global::System.Int32> value);
        partial void Oncharacteristic_group_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String class_name
        {
            get
            {
                return _class_name;
            }
            set
            {
                Onclass_nameChanging(value);
                ReportPropertyChanging("class_name");
                _class_name = StructuralObject.SetValidValue(value, false, "class_name");
                ReportPropertyChanged("class_name");
                Onclass_nameChanged();
            }
        }
        private global::System.String _class_name;
        partial void Onclass_nameChanging(global::System.String value);
        partial void Onclass_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean linkable
        {
            get
            {
                return _linkable;
            }
            set
            {
                OnlinkableChanging(value);
                ReportPropertyChanging("linkable");
                _linkable = StructuralObject.SetValidValue(value, "linkable");
                ReportPropertyChanged("linkable");
                OnlinkableChanged();
            }
        }
        private global::System.Boolean _linkable;
        partial void OnlinkableChanging(global::System.Boolean value);
        partial void OnlinkableChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean full_chain_applicable
        {
            get
            {
                return _full_chain_applicable;
            }
            set
            {
                Onfull_chain_applicableChanging(value);
                ReportPropertyChanging("full_chain_applicable");
                _full_chain_applicable = StructuralObject.SetValidValue(value, "full_chain_applicable");
                ReportPropertyChanged("full_chain_applicable");
                Onfull_chain_applicableChanged();
            }
        }
        private global::System.Boolean _full_chain_applicable;
        partial void Onfull_chain_applicableChanging(global::System.Boolean value);
        partial void Onfull_chain_applicableChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean congeneric_chain_applicable
        {
            get
            {
                return _congeneric_chain_applicable;
            }
            set
            {
                Oncongeneric_chain_applicableChanging(value);
                ReportPropertyChanging("congeneric_chain_applicable");
                _congeneric_chain_applicable = StructuralObject.SetValidValue(value, "congeneric_chain_applicable");
                ReportPropertyChanged("congeneric_chain_applicable");
                Oncongeneric_chain_applicableChanged();
            }
        }
        private global::System.Boolean _congeneric_chain_applicable;
        partial void Oncongeneric_chain_applicableChanging(global::System.Boolean value);
        partial void Oncongeneric_chain_applicableChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean binary_chain_applicable
        {
            get
            {
                return _binary_chain_applicable;
            }
            set
            {
                Onbinary_chain_applicableChanging(value);
                ReportPropertyChanging("binary_chain_applicable");
                _binary_chain_applicable = StructuralObject.SetValidValue(value, "binary_chain_applicable");
                ReportPropertyChanged("binary_chain_applicable");
                Onbinary_chain_applicableChanged();
            }
        }
        private global::System.Boolean _binary_chain_applicable;
        partial void Onbinary_chain_applicableChanging(global::System.Boolean value);
        partial void Onbinary_chain_applicableChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_type1", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_characteristic_type1", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_characteristic_type1", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_type", "characteristic")]
        public EntityCollection<characteristic> characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_type", "characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_type", "characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_group", "characteristic_group")]
        public characteristic_group characteristic_group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_group>("LibiadaWebModel.fk_characteristic_group", "characteristic_group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_group>("LibiadaWebModel.fk_characteristic_group", "characteristic_group").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<characteristic_group> characteristic_groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_group>("LibiadaWebModel.fk_characteristic_group", "characteristic_group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<characteristic_group>("LibiadaWebModel.fk_characteristic_group", "characteristic_group", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_congeneric_characteristic_type", "congeneric_characteristic")]
        public EntityCollection<congeneric_characteristic> congeneric_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_type", "congeneric_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_type", "congeneric_characteristic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="congeneric_characteristic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class congeneric_characteristic : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта congeneric_characteristic.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="chain_id">Исходное значение свойства chain_id.</param>
        /// <param name="characteristic_type_id">Исходное значение свойства characteristic_type_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        /// <param name="element_id">Исходное значение свойства element_id.</param>
        public static congeneric_characteristic Createcongeneric_characteristic(global::System.Int64 id, global::System.Int64 chain_id, global::System.Int32 characteristic_type_id, global::System.DateTimeOffset created, global::System.Int64 element_id)
        {
            congeneric_characteristic congeneric_characteristic = new congeneric_characteristic();
            congeneric_characteristic.id = id;
            congeneric_characteristic.chain_id = chain_id;
            congeneric_characteristic.characteristic_type_id = characteristic_type_id;
            congeneric_characteristic.created = created;
            congeneric_characteristic.element_id = element_id;
            return congeneric_characteristic;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 chain_id
        {
            get
            {
                return _chain_id;
            }
            set
            {
                Onchain_idChanging(value);
                ReportPropertyChanging("chain_id");
                _chain_id = StructuralObject.SetValidValue(value, "chain_id");
                ReportPropertyChanged("chain_id");
                Onchain_idChanged();
            }
        }
        private global::System.Int64 _chain_id;
        partial void Onchain_idChanging(global::System.Int64 value);
        partial void Onchain_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 characteristic_type_id
        {
            get
            {
                return _characteristic_type_id;
            }
            set
            {
                Oncharacteristic_type_idChanging(value);
                ReportPropertyChanging("characteristic_type_id");
                _characteristic_type_id = StructuralObject.SetValidValue(value, "characteristic_type_id");
                ReportPropertyChanged("characteristic_type_id");
                Oncharacteristic_type_idChanged();
            }
        }
        private global::System.Int32 _characteristic_type_id;
        partial void Oncharacteristic_type_idChanging(global::System.Int32 value);
        partial void Oncharacteristic_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private Nullable<global::System.Double> _value;
        partial void OnvalueChanging(Nullable<global::System.Double> value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value_string
        {
            get
            {
                return _value_string;
            }
            set
            {
                Onvalue_stringChanging(value);
                ReportPropertyChanging("value_string");
                _value_string = StructuralObject.SetValidValue(value, true, "value_string");
                ReportPropertyChanged("value_string");
                Onvalue_stringChanged();
            }
        }
        private global::System.String _value_string;
        partial void Onvalue_stringChanging(global::System.String value);
        partial void Onvalue_stringChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> link_id
        {
            get
            {
                return _link_id;
            }
            set
            {
                Onlink_idChanging(value);
                ReportPropertyChanging("link_id");
                _link_id = StructuralObject.SetValidValue(value, "link_id");
                ReportPropertyChanged("link_id");
                Onlink_idChanged();
            }
        }
        private Nullable<global::System.Int32> _link_id;
        partial void Onlink_idChanging(Nullable<global::System.Int32> value);
        partial void Onlink_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 element_id
        {
            get
            {
                return _element_id;
            }
            set
            {
                Onelement_idChanging(value);
                ReportPropertyChanging("element_id");
                _element_id = StructuralObject.SetValidValue(value, "element_id");
                ReportPropertyChanged("element_id");
                Onelement_idChanged();
            }
        }
        private global::System.Int64 _element_id;
        partial void Onelement_idChanging(global::System.Int64 value);
        partial void Onelement_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_congeneric_characteristic_type", "characteristic_type")]
        public characteristic_type characteristic_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_congeneric_characteristic_type", "characteristic_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_congeneric_characteristic_type", "characteristic_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<characteristic_type> characteristic_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<characteristic_type>("LibiadaWebModel.fk_congeneric_characteristic_type", "characteristic_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<characteristic_type>("LibiadaWebModel.fk_congeneric_characteristic_type", "characteristic_type", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_congeneric_characteristic_element", "element")]
        public element element
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_congeneric_characteristic_element", "element").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_congeneric_characteristic_element", "element").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<element> elementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<element>("LibiadaWebModel.fk_congeneric_characteristic_element", "element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<element>("LibiadaWebModel.fk_congeneric_characteristic_element", "element", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_congeneric_characteristic_link", "link")]
        public link link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link>("LibiadaWebModel.fk_congeneric_characteristic_link", "link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link>("LibiadaWebModel.fk_congeneric_characteristic_link", "link").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<link> linkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<link>("LibiadaWebModel.fk_congeneric_characteristic_link", "link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<link>("LibiadaWebModel.fk_congeneric_characteristic_link", "link", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="dna_chain")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dna_chain : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта dna_chain.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="notation_id">Исходное значение свойства notation_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        /// <param name="matter_id">Исходное значение свойства matter_id.</param>
        /// <param name="dissimilar">Исходное значение свойства dissimilar.</param>
        /// <param name="piece_type_id">Исходное значение свойства piece_type_id.</param>
        /// <param name="piece_position">Исходное значение свойства piece_position.</param>
        /// <param name="complement">Исходное значение свойства complement.</param>
        /// <param name="partial">Исходное значение свойства partial.</param>
        public static dna_chain Createdna_chain(global::System.Int64 id, global::System.Int32 notation_id, global::System.DateTimeOffset created, global::System.Int64 matter_id, global::System.Boolean dissimilar, global::System.Int32 piece_type_id, global::System.Int64 piece_position, global::System.Boolean complement, global::System.Boolean partial)
        {
            dna_chain dna_chain = new dna_chain();
            dna_chain.id = id;
            dna_chain.notation_id = notation_id;
            dna_chain.created = created;
            dna_chain.matter_id = matter_id;
            dna_chain.dissimilar = dissimilar;
            dna_chain.piece_type_id = piece_type_id;
            dna_chain.piece_position = piece_position;
            dna_chain.complement = complement;
            dna_chain.partial = partial;
            return dna_chain;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notation_id
        {
            get
            {
                return _notation_id;
            }
            set
            {
                Onnotation_idChanging(value);
                ReportPropertyChanging("notation_id");
                _notation_id = StructuralObject.SetValidValue(value, "notation_id");
                ReportPropertyChanged("notation_id");
                Onnotation_idChanged();
            }
        }
        private global::System.Int32 _notation_id;
        partial void Onnotation_idChanging(global::System.Int32 value);
        partial void Onnotation_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> product_id
        {
            get
            {
                return _product_id;
            }
            set
            {
                Onproduct_idChanging(value);
                ReportPropertyChanging("product_id");
                _product_id = StructuralObject.SetValidValue(value, "product_id");
                ReportPropertyChanged("product_id");
                Onproduct_idChanged();
            }
        }
        private Nullable<global::System.Int32> _product_id;
        partial void Onproduct_idChanging(Nullable<global::System.Int32> value);
        partial void Onproduct_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 matter_id
        {
            get
            {
                return _matter_id;
            }
            set
            {
                Onmatter_idChanging(value);
                ReportPropertyChanging("matter_id");
                _matter_id = StructuralObject.SetValidValue(value, "matter_id");
                ReportPropertyChanged("matter_id");
                Onmatter_idChanged();
            }
        }
        private global::System.Int64 _matter_id;
        partial void Onmatter_idChanging(global::System.Int64 value);
        partial void Onmatter_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean dissimilar
        {
            get
            {
                return _dissimilar;
            }
            set
            {
                OndissimilarChanging(value);
                ReportPropertyChanging("dissimilar");
                _dissimilar = StructuralObject.SetValidValue(value, "dissimilar");
                ReportPropertyChanged("dissimilar");
                OndissimilarChanged();
            }
        }
        private global::System.Boolean _dissimilar;
        partial void OndissimilarChanging(global::System.Boolean value);
        partial void OndissimilarChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 piece_type_id
        {
            get
            {
                return _piece_type_id;
            }
            set
            {
                Onpiece_type_idChanging(value);
                ReportPropertyChanging("piece_type_id");
                _piece_type_id = StructuralObject.SetValidValue(value, "piece_type_id");
                ReportPropertyChanged("piece_type_id");
                Onpiece_type_idChanged();
            }
        }
        private global::System.Int32 _piece_type_id;
        partial void Onpiece_type_idChanging(global::System.Int32 value);
        partial void Onpiece_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 piece_position
        {
            get
            {
                return _piece_position;
            }
            set
            {
                Onpiece_positionChanging(value);
                ReportPropertyChanging("piece_position");
                _piece_position = StructuralObject.SetValidValue(value, "piece_position");
                ReportPropertyChanged("piece_position");
                Onpiece_positionChanged();
            }
        }
        private global::System.Int64 _piece_position;
        partial void Onpiece_positionChanging(global::System.Int64 value);
        partial void Onpiece_positionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> remote_db_id
        {
            get
            {
                return _remote_db_id;
            }
            set
            {
                Onremote_db_idChanging(value);
                ReportPropertyChanging("remote_db_id");
                _remote_db_id = StructuralObject.SetValidValue(value, "remote_db_id");
                ReportPropertyChanged("remote_db_id");
                Onremote_db_idChanged();
            }
        }
        private Nullable<global::System.Int32> _remote_db_id;
        partial void Onremote_db_idChanging(Nullable<global::System.Int32> value);
        partial void Onremote_db_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> web_api_id
        {
            get
            {
                return _web_api_id;
            }
            set
            {
                Onweb_api_idChanging(value);
                ReportPropertyChanging("web_api_id");
                _web_api_id = StructuralObject.SetValidValue(value, "web_api_id");
                ReportPropertyChanged("web_api_id");
                Onweb_api_idChanged();
            }
        }
        private Nullable<global::System.Int32> _web_api_id;
        partial void Onweb_api_idChanging(Nullable<global::System.Int32> value);
        partial void Onweb_api_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remote_id
        {
            get
            {
                return _remote_id;
            }
            set
            {
                Onremote_idChanging(value);
                ReportPropertyChanging("remote_id");
                _remote_id = StructuralObject.SetValidValue(value, true, "remote_id");
                ReportPropertyChanged("remote_id");
                Onremote_idChanged();
            }
        }
        private global::System.String _remote_id;
        partial void Onremote_idChanging(global::System.String value);
        partial void Onremote_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fasta_header
        {
            get
            {
                return _fasta_header;
            }
            set
            {
                Onfasta_headerChanging(value);
                ReportPropertyChanging("fasta_header");
                _fasta_header = StructuralObject.SetValidValue(value, true, "fasta_header");
                ReportPropertyChanged("fasta_header");
                Onfasta_headerChanged();
            }
        }
        private global::System.String _fasta_header;
        partial void Onfasta_headerChanging(global::System.String value);
        partial void Onfasta_headerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean complement
        {
            get
            {
                return _complement;
            }
            set
            {
                OncomplementChanging(value);
                ReportPropertyChanging("complement");
                _complement = StructuralObject.SetValidValue(value, "complement");
                ReportPropertyChanged("complement");
                OncomplementChanged();
            }
        }
        private global::System.Boolean _complement;
        partial void OncomplementChanging(global::System.Boolean value);
        partial void OncomplementChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean partial
        {
            get
            {
                return _partial;
            }
            set
            {
                OnpartialChanging(value);
                ReportPropertyChanging("partial");
                _partial = StructuralObject.SetValidValue(value, "partial");
                ReportPropertyChanged("partial");
                OnpartialChanged();
            }
        }
        private global::System.Boolean _partial;
        partial void OnpartialChanging(global::System.Boolean value);
        partial void OnpartialChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_dna_chain", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_dna_chain", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_dna_chain", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_dna_chain", "characteristic")]
        public EntityCollection<characteristic> characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_dna_chain", "characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_dna_chain", "characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_chain_matter", "matter")]
        public matter matter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_dna_chain_matter", "matter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_dna_chain_matter", "matter").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matter> matterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_dna_chain_matter", "matter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matter>("LibiadaWebModel.fk_dna_chain_matter", "matter", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_chain_notation", "notation")]
        public notation notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_dna_chain_notation", "notation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_dna_chain_notation", "notation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notation> notationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_dna_chain_notation", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notation>("LibiadaWebModel.fk_dna_chain_notation", "notation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_chain_product", "product")]
        public product product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<product>("LibiadaWebModel.fk_dna_chain_product", "product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<product>("LibiadaWebModel.fk_dna_chain_product", "product").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<product> productReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<product>("LibiadaWebModel.fk_dna_chain_product", "product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<product>("LibiadaWebModel.fk_dna_chain_product", "product", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_chain_piece_type", "piece_type")]
        public piece_type piece_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_dna_chain_piece_type", "piece_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_dna_chain_piece_type", "piece_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<piece_type> piece_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_dna_chain_piece_type", "piece_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<piece_type>("LibiadaWebModel.fk_dna_chain_piece_type", "piece_type", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_chain_remote_db", "remote_db")]
        public remote_db remote_db
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_dna_chain_remote_db", "remote_db").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_dna_chain_remote_db", "remote_db").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<remote_db> remote_dbReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_dna_chain_remote_db", "remote_db");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<remote_db>("LibiadaWebModel.fk_dna_chain_remote_db", "remote_db", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="element")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class element : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта element.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="notation_id">Исходное значение свойства notation_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        public static element Createelement(global::System.Int64 id, global::System.Int32 notation_id, global::System.DateTimeOffset created)
        {
            element element = new element();
            element.id = id;
            element.notation_id = notation_id;
            element.created = created;
            return element;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notation_id
        {
            get
            {
                return _notation_id;
            }
            set
            {
                Onnotation_idChanging(value);
                ReportPropertyChanging("notation_id");
                _notation_id = StructuralObject.SetValidValue(value, "notation_id");
                ReportPropertyChanged("notation_id");
                Onnotation_idChanged();
            }
        }
        private global::System.Int32 _notation_id;
        partial void Onnotation_idChanging(global::System.Int32 value);
        partial void Onnotation_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_first_element", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_first_element", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_first_element", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_second_element", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_second_element", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_second_element", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_element_notation", "notation")]
        public notation notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_element_notation", "notation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_element_notation", "notation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notation> notationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_element_notation", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notation>("LibiadaWebModel.fk_element_notation", "notation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_congeneric_characteristic_element", "congeneric_characteristic")]
        public EntityCollection<congeneric_characteristic> congeneric_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_element", "congeneric_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_element", "congeneric_characteristic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="fmotiv")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fmotiv : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта fmotiv.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="notation_id">Исходное значение свойства notation_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        /// <param name="matter_id">Исходное значение свойства matter_id.</param>
        /// <param name="dissimilar">Исходное значение свойства dissimilar.</param>
        /// <param name="piece_type_id">Исходное значение свойства piece_type_id.</param>
        /// <param name="piece_position">Исходное значение свойства piece_position.</param>
        /// <param name="fmotiv_type_id">Исходное значение свойства fmotiv_type_id.</param>
        public static fmotiv Createfmotiv(global::System.Int64 id, global::System.Int32 notation_id, global::System.DateTimeOffset created, global::System.Int64 matter_id, global::System.Boolean dissimilar, global::System.Int32 piece_type_id, global::System.Int64 piece_position, global::System.Int32 fmotiv_type_id)
        {
            fmotiv fmotiv = new fmotiv();
            fmotiv.id = id;
            fmotiv.notation_id = notation_id;
            fmotiv.created = created;
            fmotiv.matter_id = matter_id;
            fmotiv.dissimilar = dissimilar;
            fmotiv.piece_type_id = piece_type_id;
            fmotiv.piece_position = piece_position;
            fmotiv.fmotiv_type_id = fmotiv_type_id;
            return fmotiv;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notation_id
        {
            get
            {
                return _notation_id;
            }
            set
            {
                Onnotation_idChanging(value);
                ReportPropertyChanging("notation_id");
                _notation_id = StructuralObject.SetValidValue(value, "notation_id");
                ReportPropertyChanged("notation_id");
                Onnotation_idChanged();
            }
        }
        private global::System.Int32 _notation_id;
        partial void Onnotation_idChanging(global::System.Int32 value);
        partial void Onnotation_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 matter_id
        {
            get
            {
                return _matter_id;
            }
            set
            {
                Onmatter_idChanging(value);
                ReportPropertyChanging("matter_id");
                _matter_id = StructuralObject.SetValidValue(value, "matter_id");
                ReportPropertyChanged("matter_id");
                Onmatter_idChanged();
            }
        }
        private global::System.Int64 _matter_id;
        partial void Onmatter_idChanging(global::System.Int64 value);
        partial void Onmatter_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean dissimilar
        {
            get
            {
                return _dissimilar;
            }
            set
            {
                OndissimilarChanging(value);
                ReportPropertyChanging("dissimilar");
                _dissimilar = StructuralObject.SetValidValue(value, "dissimilar");
                ReportPropertyChanged("dissimilar");
                OndissimilarChanged();
            }
        }
        private global::System.Boolean _dissimilar;
        partial void OndissimilarChanging(global::System.Boolean value);
        partial void OndissimilarChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 piece_type_id
        {
            get
            {
                return _piece_type_id;
            }
            set
            {
                Onpiece_type_idChanging(value);
                ReportPropertyChanging("piece_type_id");
                _piece_type_id = StructuralObject.SetValidValue(value, "piece_type_id");
                ReportPropertyChanged("piece_type_id");
                Onpiece_type_idChanged();
            }
        }
        private global::System.Int32 _piece_type_id;
        partial void Onpiece_type_idChanging(global::System.Int32 value);
        partial void Onpiece_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 piece_position
        {
            get
            {
                return _piece_position;
            }
            set
            {
                Onpiece_positionChanging(value);
                ReportPropertyChanging("piece_position");
                _piece_position = StructuralObject.SetValidValue(value, "piece_position");
                ReportPropertyChanged("piece_position");
                Onpiece_positionChanged();
            }
        }
        private global::System.Int64 _piece_position;
        partial void Onpiece_positionChanging(global::System.Int64 value);
        partial void Onpiece_positionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fmotiv_type_id
        {
            get
            {
                return _fmotiv_type_id;
            }
            set
            {
                Onfmotiv_type_idChanging(value);
                ReportPropertyChanging("fmotiv_type_id");
                _fmotiv_type_id = StructuralObject.SetValidValue(value, "fmotiv_type_id");
                ReportPropertyChanged("fmotiv_type_id");
                Onfmotiv_type_idChanged();
            }
        }
        private global::System.Int32 _fmotiv_type_id;
        partial void Onfmotiv_type_idChanging(global::System.Int32 value);
        partial void Onfmotiv_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> remote_db_id
        {
            get
            {
                return _remote_db_id;
            }
            set
            {
                Onremote_db_idChanging(value);
                ReportPropertyChanging("remote_db_id");
                _remote_db_id = StructuralObject.SetValidValue(value, "remote_db_id");
                ReportPropertyChanged("remote_db_id");
                Onremote_db_idChanged();
            }
        }
        private Nullable<global::System.Int32> _remote_db_id;
        partial void Onremote_db_idChanging(Nullable<global::System.Int32> value);
        partial void Onremote_db_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remote_id
        {
            get
            {
                return _remote_id;
            }
            set
            {
                Onremote_idChanging(value);
                ReportPropertyChanging("remote_id");
                _remote_id = StructuralObject.SetValidValue(value, true, "remote_id");
                ReportPropertyChanged("remote_id");
                Onremote_idChanged();
            }
        }
        private global::System.String _remote_id;
        partial void Onremote_idChanging(global::System.String value);
        partial void Onremote_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_fmotiv_matter", "matter")]
        public matter matter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_fmotiv_matter", "matter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_fmotiv_matter", "matter").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matter> matterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_fmotiv_matter", "matter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matter>("LibiadaWebModel.fk_fmotiv_matter", "matter", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_fmotiv_notation", "notation")]
        public notation notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_fmotiv_notation", "notation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_fmotiv_notation", "notation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notation> notationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_fmotiv_notation", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notation>("LibiadaWebModel.fk_fmotiv_notation", "notation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_fmotiv_piece_type", "piece_type")]
        public piece_type piece_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_fmotiv_piece_type", "piece_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_fmotiv_piece_type", "piece_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<piece_type> piece_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_fmotiv_piece_type", "piece_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<piece_type>("LibiadaWebModel.fk_fmotiv_piece_type", "piece_type", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_fmotiv", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_fmotiv", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_fmotiv", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_congeneric_characteristic_fmotiv", "congeneric_characteristic")]
        public EntityCollection<congeneric_characteristic> congeneric_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_fmotiv", "congeneric_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_fmotiv", "congeneric_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_fmotiv", "characteristic")]
        public EntityCollection<characteristic> characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_fmotiv", "characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_fmotiv", "characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_fmotiv_fmotiv_type", "fmotiv_type")]
        public fmotiv_type fmotiv_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fmotiv_type>("LibiadaWebModel.fk_fmotiv_fmotiv_type", "fmotiv_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fmotiv_type>("LibiadaWebModel.fk_fmotiv_fmotiv_type", "fmotiv_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<fmotiv_type> fmotiv_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fmotiv_type>("LibiadaWebModel.fk_fmotiv_fmotiv_type", "fmotiv_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<fmotiv_type>("LibiadaWebModel.fk_fmotiv_fmotiv_type", "fmotiv_type", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_fmotiv_remote_db", "remote_db")]
        public remote_db remote_db
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_fmotiv_remote_db", "remote_db").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_fmotiv_remote_db", "remote_db").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<remote_db> remote_dbReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_fmotiv_remote_db", "remote_db");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<remote_db>("LibiadaWebModel.fk_fmotiv_remote_db", "remote_db", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="fmotiv_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fmotiv_type : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта fmotiv_type.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static fmotiv_type Createfmotiv_type(global::System.Int32 id, global::System.String name)
        {
            fmotiv_type fmotiv_type = new fmotiv_type();
            fmotiv_type.id = id;
            fmotiv_type.name = name;
            return fmotiv_type;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_fmotiv_fmotiv_type", "fmotiv")]
        public EntityCollection<fmotiv> fmotiv
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fmotiv>("LibiadaWebModel.fk_fmotiv_fmotiv_type", "fmotiv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fmotiv>("LibiadaWebModel.fk_fmotiv_fmotiv_type", "fmotiv", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="instrument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class instrument : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта instrument.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static instrument Createinstrument(global::System.Int32 id, global::System.String name)
        {
            instrument instrument = new instrument();
            instrument.id = id;
            instrument.name = name;
            return instrument;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_pitch_instrument", "pitch")]
        public EntityCollection<pitch> pitch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<pitch>("LibiadaWebModel.fk_pitch_instrument", "pitch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<pitch>("LibiadaWebModel.fk_pitch_instrument", "pitch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class language : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта language.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static language Createlanguage(global::System.Int32 id, global::System.String name)
        {
            language language = new language();
            language.id = id;
            language.name = name;
            return language;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_literature_chain_language", "literature_chain")]
        public EntityCollection<literature_chain> literature_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<literature_chain>("LibiadaWebModel.fk_literature_chain_language", "literature_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<literature_chain>("LibiadaWebModel.fk_literature_chain_language", "literature_chain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="link")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class link : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта link.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static link Createlink(global::System.Int32 id, global::System.String name)
        {
            link link = new link();
            link.id = id;
            link.name = name;
            return link;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_link", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_link", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_link", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_link", "characteristic")]
        public EntityCollection<characteristic> characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_link", "characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_link", "characteristic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="literature_chain")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class literature_chain : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта literature_chain.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="notation_id">Исходное значение свойства notation_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        /// <param name="matter_id">Исходное значение свойства matter_id.</param>
        /// <param name="dissimilar">Исходное значение свойства dissimilar.</param>
        /// <param name="piece_type_id">Исходное значение свойства piece_type_id.</param>
        /// <param name="piece_position">Исходное значение свойства piece_position.</param>
        /// <param name="original">Исходное значение свойства original.</param>
        /// <param name="language_id">Исходное значение свойства language_id.</param>
        public static literature_chain Createliterature_chain(global::System.Int64 id, global::System.Int32 notation_id, global::System.DateTimeOffset created, global::System.Int64 matter_id, global::System.Boolean dissimilar, global::System.Int32 piece_type_id, global::System.Int64 piece_position, global::System.Boolean original, global::System.Int32 language_id)
        {
            literature_chain literature_chain = new literature_chain();
            literature_chain.id = id;
            literature_chain.notation_id = notation_id;
            literature_chain.created = created;
            literature_chain.matter_id = matter_id;
            literature_chain.dissimilar = dissimilar;
            literature_chain.piece_type_id = piece_type_id;
            literature_chain.piece_position = piece_position;
            literature_chain.original = original;
            literature_chain.language_id = language_id;
            return literature_chain;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notation_id
        {
            get
            {
                return _notation_id;
            }
            set
            {
                Onnotation_idChanging(value);
                ReportPropertyChanging("notation_id");
                _notation_id = StructuralObject.SetValidValue(value, "notation_id");
                ReportPropertyChanged("notation_id");
                Onnotation_idChanged();
            }
        }
        private global::System.Int32 _notation_id;
        partial void Onnotation_idChanging(global::System.Int32 value);
        partial void Onnotation_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 matter_id
        {
            get
            {
                return _matter_id;
            }
            set
            {
                Onmatter_idChanging(value);
                ReportPropertyChanging("matter_id");
                _matter_id = StructuralObject.SetValidValue(value, "matter_id");
                ReportPropertyChanged("matter_id");
                Onmatter_idChanged();
            }
        }
        private global::System.Int64 _matter_id;
        partial void Onmatter_idChanging(global::System.Int64 value);
        partial void Onmatter_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean dissimilar
        {
            get
            {
                return _dissimilar;
            }
            set
            {
                OndissimilarChanging(value);
                ReportPropertyChanging("dissimilar");
                _dissimilar = StructuralObject.SetValidValue(value, "dissimilar");
                ReportPropertyChanged("dissimilar");
                OndissimilarChanged();
            }
        }
        private global::System.Boolean _dissimilar;
        partial void OndissimilarChanging(global::System.Boolean value);
        partial void OndissimilarChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 piece_type_id
        {
            get
            {
                return _piece_type_id;
            }
            set
            {
                Onpiece_type_idChanging(value);
                ReportPropertyChanging("piece_type_id");
                _piece_type_id = StructuralObject.SetValidValue(value, "piece_type_id");
                ReportPropertyChanged("piece_type_id");
                Onpiece_type_idChanged();
            }
        }
        private global::System.Int32 _piece_type_id;
        partial void Onpiece_type_idChanging(global::System.Int32 value);
        partial void Onpiece_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 piece_position
        {
            get
            {
                return _piece_position;
            }
            set
            {
                Onpiece_positionChanging(value);
                ReportPropertyChanging("piece_position");
                _piece_position = StructuralObject.SetValidValue(value, "piece_position");
                ReportPropertyChanged("piece_position");
                Onpiece_positionChanged();
            }
        }
        private global::System.Int64 _piece_position;
        partial void Onpiece_positionChanging(global::System.Int64 value);
        partial void Onpiece_positionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean original
        {
            get
            {
                return _original;
            }
            set
            {
                OnoriginalChanging(value);
                ReportPropertyChanging("original");
                _original = StructuralObject.SetValidValue(value, "original");
                ReportPropertyChanged("original");
                OnoriginalChanged();
            }
        }
        private global::System.Boolean _original;
        partial void OnoriginalChanging(global::System.Boolean value);
        partial void OnoriginalChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value, "language_id");
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private global::System.Int32 _language_id;
        partial void Onlanguage_idChanging(global::System.Int32 value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> remote_db_id
        {
            get
            {
                return _remote_db_id;
            }
            set
            {
                Onremote_db_idChanging(value);
                ReportPropertyChanging("remote_db_id");
                _remote_db_id = StructuralObject.SetValidValue(value, "remote_db_id");
                ReportPropertyChanged("remote_db_id");
                Onremote_db_idChanged();
            }
        }
        private Nullable<global::System.Int32> _remote_db_id;
        partial void Onremote_db_idChanging(Nullable<global::System.Int32> value);
        partial void Onremote_db_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remote_id
        {
            get
            {
                return _remote_id;
            }
            set
            {
                Onremote_idChanging(value);
                ReportPropertyChanging("remote_id");
                _remote_id = StructuralObject.SetValidValue(value, true, "remote_id");
                ReportPropertyChanged("remote_id");
                Onremote_idChanged();
            }
        }
        private global::System.String _remote_id;
        partial void Onremote_idChanging(global::System.String value);
        partial void Onremote_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_literature_chain", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_literature_chain", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_literature_chain", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_congeneric_characteristic_literature_chain", "congeneric_characteristic")]
        public EntityCollection<congeneric_characteristic> congeneric_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_literature_chain", "congeneric_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_literature_chain", "congeneric_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_literature_chain", "characteristic")]
        public EntityCollection<characteristic> characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_literature_chain", "characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_literature_chain", "characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_literature_chain_language", "language")]
        public language language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("LibiadaWebModel.fk_literature_chain_language", "language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("LibiadaWebModel.fk_literature_chain_language", "language").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<language> languageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("LibiadaWebModel.fk_literature_chain_language", "language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<language>("LibiadaWebModel.fk_literature_chain_language", "language", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_literature_chain_matter", "matter")]
        public matter matter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_literature_chain_matter", "matter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_literature_chain_matter", "matter").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matter> matterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_literature_chain_matter", "matter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matter>("LibiadaWebModel.fk_literature_chain_matter", "matter", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_literature_chain_notation", "notation")]
        public notation notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_literature_chain_notation", "notation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_literature_chain_notation", "notation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notation> notationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_literature_chain_notation", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notation>("LibiadaWebModel.fk_literature_chain_notation", "notation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_literature_chain_piece_type", "piece_type")]
        public piece_type piece_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_literature_chain_piece_type", "piece_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_literature_chain_piece_type", "piece_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<piece_type> piece_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_literature_chain_piece_type", "piece_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<piece_type>("LibiadaWebModel.fk_literature_chain_piece_type", "piece_type", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_literature_chain_remote_db", "remote_db")]
        public remote_db remote_db
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_literature_chain_remote_db", "remote_db").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_literature_chain_remote_db", "remote_db").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<remote_db> remote_dbReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_literature_chain_remote_db", "remote_db");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<remote_db>("LibiadaWebModel.fk_literature_chain_remote_db", "remote_db", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="matter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class matter : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта matter.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="nature_id">Исходное значение свойства nature_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        public static matter Creatematter(global::System.Int64 id, global::System.Int32 nature_id, global::System.DateTimeOffset created)
        {
            matter matter = new matter();
            matter.id = id;
            matter.nature_id = nature_id;
            matter.created = created;
            return matter;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nature_id
        {
            get
            {
                return _nature_id;
            }
            set
            {
                Onnature_idChanging(value);
                ReportPropertyChanging("nature_id");
                _nature_id = StructuralObject.SetValidValue(value, "nature_id");
                ReportPropertyChanged("nature_id");
                Onnature_idChanged();
            }
        }
        private global::System.Int32 _nature_id;
        partial void Onnature_idChanging(global::System.Int32 value);
        partial void Onnature_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_matter", "chain")]
        public EntityCollection<chain> chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<chain>("LibiadaWebModel.fk_chain_matter", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<chain>("LibiadaWebModel.fk_chain_matter", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_chain_matter", "dna_chain")]
        public EntityCollection<dna_chain> dna_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<dna_chain>("LibiadaWebModel.fk_dna_chain_matter", "dna_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<dna_chain>("LibiadaWebModel.fk_dna_chain_matter", "dna_chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_literature_chain_matter", "literature_chain")]
        public EntityCollection<literature_chain> literature_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<literature_chain>("LibiadaWebModel.fk_literature_chain_matter", "literature_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<literature_chain>("LibiadaWebModel.fk_literature_chain_matter", "literature_chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_matter_nature", "nature")]
        public nature nature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_matter_nature", "nature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_matter_nature", "nature").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<nature> natureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_matter_nature", "nature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<nature>("LibiadaWebModel.fk_matter_nature", "nature", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_fmotiv_matter", "fmotiv")]
        public EntityCollection<fmotiv> fmotiv
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fmotiv>("LibiadaWebModel.fk_fmotiv_matter", "fmotiv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fmotiv>("LibiadaWebModel.fk_fmotiv_matter", "fmotiv", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_measure_matter", "measure")]
        public EntityCollection<measure> measure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<measure>("LibiadaWebModel.fk_measure_matter", "measure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<measure>("LibiadaWebModel.fk_measure_matter", "measure", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_music_chain_matter", "music_chain")]
        public EntityCollection<music_chain> music_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<music_chain>("LibiadaWebModel.fk_music_chain_matter", "music_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<music_chain>("LibiadaWebModel.fk_music_chain_matter", "music_chain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="measure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class measure : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта measure.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="notation_id">Исходное значение свойства notation_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        /// <param name="matter_id">Исходное значение свойства matter_id.</param>
        /// <param name="dissimilar">Исходное значение свойства dissimilar.</param>
        /// <param name="piece_type_id">Исходное значение свойства piece_type_id.</param>
        /// <param name="piece_position">Исходное значение свойства piece_position.</param>
        /// <param name="beats">Исходное значение свойства beats.</param>
        /// <param name="beatbase">Исходное значение свойства beatbase.</param>
        /// <param name="fifths">Исходное значение свойства fifths.</param>
        public static measure Createmeasure(global::System.Int64 id, global::System.Int32 notation_id, global::System.DateTimeOffset created, global::System.Int64 matter_id, global::System.Boolean dissimilar, global::System.Int32 piece_type_id, global::System.Int64 piece_position, global::System.Int32 beats, global::System.Int32 beatbase, global::System.Int32 fifths)
        {
            measure measure = new measure();
            measure.id = id;
            measure.notation_id = notation_id;
            measure.created = created;
            measure.matter_id = matter_id;
            measure.dissimilar = dissimilar;
            measure.piece_type_id = piece_type_id;
            measure.piece_position = piece_position;
            measure.beats = beats;
            measure.beatbase = beatbase;
            measure.fifths = fifths;
            return measure;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notation_id
        {
            get
            {
                return _notation_id;
            }
            set
            {
                Onnotation_idChanging(value);
                ReportPropertyChanging("notation_id");
                _notation_id = StructuralObject.SetValidValue(value, "notation_id");
                ReportPropertyChanged("notation_id");
                Onnotation_idChanged();
            }
        }
        private global::System.Int32 _notation_id;
        partial void Onnotation_idChanging(global::System.Int32 value);
        partial void Onnotation_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 matter_id
        {
            get
            {
                return _matter_id;
            }
            set
            {
                Onmatter_idChanging(value);
                ReportPropertyChanging("matter_id");
                _matter_id = StructuralObject.SetValidValue(value, "matter_id");
                ReportPropertyChanged("matter_id");
                Onmatter_idChanged();
            }
        }
        private global::System.Int64 _matter_id;
        partial void Onmatter_idChanging(global::System.Int64 value);
        partial void Onmatter_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean dissimilar
        {
            get
            {
                return _dissimilar;
            }
            set
            {
                OndissimilarChanging(value);
                ReportPropertyChanging("dissimilar");
                _dissimilar = StructuralObject.SetValidValue(value, "dissimilar");
                ReportPropertyChanged("dissimilar");
                OndissimilarChanged();
            }
        }
        private global::System.Boolean _dissimilar;
        partial void OndissimilarChanging(global::System.Boolean value);
        partial void OndissimilarChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 piece_type_id
        {
            get
            {
                return _piece_type_id;
            }
            set
            {
                Onpiece_type_idChanging(value);
                ReportPropertyChanging("piece_type_id");
                _piece_type_id = StructuralObject.SetValidValue(value, "piece_type_id");
                ReportPropertyChanged("piece_type_id");
                Onpiece_type_idChanged();
            }
        }
        private global::System.Int32 _piece_type_id;
        partial void Onpiece_type_idChanging(global::System.Int32 value);
        partial void Onpiece_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 piece_position
        {
            get
            {
                return _piece_position;
            }
            set
            {
                Onpiece_positionChanging(value);
                ReportPropertyChanging("piece_position");
                _piece_position = StructuralObject.SetValidValue(value, "piece_position");
                ReportPropertyChanged("piece_position");
                Onpiece_positionChanged();
            }
        }
        private global::System.Int64 _piece_position;
        partial void Onpiece_positionChanging(global::System.Int64 value);
        partial void Onpiece_positionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 beats
        {
            get
            {
                return _beats;
            }
            set
            {
                OnbeatsChanging(value);
                ReportPropertyChanging("beats");
                _beats = StructuralObject.SetValidValue(value, "beats");
                ReportPropertyChanged("beats");
                OnbeatsChanged();
            }
        }
        private global::System.Int32 _beats;
        partial void OnbeatsChanging(global::System.Int32 value);
        partial void OnbeatsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 beatbase
        {
            get
            {
                return _beatbase;
            }
            set
            {
                OnbeatbaseChanging(value);
                ReportPropertyChanging("beatbase");
                _beatbase = StructuralObject.SetValidValue(value, "beatbase");
                ReportPropertyChanged("beatbase");
                OnbeatbaseChanged();
            }
        }
        private global::System.Int32 _beatbase;
        partial void OnbeatbaseChanging(global::System.Int32 value);
        partial void OnbeatbaseChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ticks_per_beat
        {
            get
            {
                return _ticks_per_beat;
            }
            set
            {
                Onticks_per_beatChanging(value);
                ReportPropertyChanging("ticks_per_beat");
                _ticks_per_beat = StructuralObject.SetValidValue(value, "ticks_per_beat");
                ReportPropertyChanged("ticks_per_beat");
                Onticks_per_beatChanged();
            }
        }
        private Nullable<global::System.Int32> _ticks_per_beat;
        partial void Onticks_per_beatChanging(Nullable<global::System.Int32> value);
        partial void Onticks_per_beatChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fifths
        {
            get
            {
                return _fifths;
            }
            set
            {
                OnfifthsChanging(value);
                ReportPropertyChanging("fifths");
                _fifths = StructuralObject.SetValidValue(value, "fifths");
                ReportPropertyChanged("fifths");
                OnfifthsChanged();
            }
        }
        private global::System.Int32 _fifths;
        partial void OnfifthsChanging(global::System.Int32 value);
        partial void OnfifthsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> remote_db_id
        {
            get
            {
                return _remote_db_id;
            }
            set
            {
                Onremote_db_idChanging(value);
                ReportPropertyChanging("remote_db_id");
                _remote_db_id = StructuralObject.SetValidValue(value, "remote_db_id");
                ReportPropertyChanged("remote_db_id");
                Onremote_db_idChanged();
            }
        }
        private Nullable<global::System.Int32> _remote_db_id;
        partial void Onremote_db_idChanging(Nullable<global::System.Int32> value);
        partial void Onremote_db_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remote_id
        {
            get
            {
                return _remote_id;
            }
            set
            {
                Onremote_idChanging(value);
                ReportPropertyChanging("remote_id");
                _remote_id = StructuralObject.SetValidValue(value, true, "remote_id");
                ReportPropertyChanged("remote_id");
                Onremote_idChanged();
            }
        }
        private global::System.String _remote_id;
        partial void Onremote_idChanging(global::System.String value);
        partial void Onremote_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_measure_matter", "matter")]
        public matter matter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_measure_matter", "matter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_measure_matter", "matter").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matter> matterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_measure_matter", "matter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matter>("LibiadaWebModel.fk_measure_matter", "matter", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_measure_notation", "notation")]
        public notation notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_measure_notation", "notation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_measure_notation", "notation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notation> notationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_measure_notation", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notation>("LibiadaWebModel.fk_measure_notation", "notation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_measure_piece_type", "piece_type")]
        public piece_type piece_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_measure_piece_type", "piece_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_measure_piece_type", "piece_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<piece_type> piece_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_measure_piece_type", "piece_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<piece_type>("LibiadaWebModel.fk_measure_piece_type", "piece_type", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_measure", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_measure", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_measure", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_congeneric_characteristic_measure", "congeneric_characteristic")]
        public EntityCollection<congeneric_characteristic> congeneric_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_measure", "congeneric_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_measure", "congeneric_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_measure", "characteristic")]
        public EntityCollection<characteristic> characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_measure", "characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_measure", "characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_measure_remote_db", "remote_db")]
        public remote_db remote_db
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_measure_remote_db", "remote_db").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_measure_remote_db", "remote_db").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<remote_db> remote_dbReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_measure_remote_db", "remote_db");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<remote_db>("LibiadaWebModel.fk_measure_remote_db", "remote_db", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="music_chain")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class music_chain : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта music_chain.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="notation_id">Исходное значение свойства notation_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        /// <param name="matter_id">Исходное значение свойства matter_id.</param>
        /// <param name="dissimilar">Исходное значение свойства dissimilar.</param>
        /// <param name="piece_type_id">Исходное значение свойства piece_type_id.</param>
        /// <param name="piece_position">Исходное значение свойства piece_position.</param>
        public static music_chain Createmusic_chain(global::System.Int64 id, global::System.Int32 notation_id, global::System.DateTimeOffset created, global::System.Int64 matter_id, global::System.Boolean dissimilar, global::System.Int32 piece_type_id, global::System.Int64 piece_position)
        {
            music_chain music_chain = new music_chain();
            music_chain.id = id;
            music_chain.notation_id = notation_id;
            music_chain.created = created;
            music_chain.matter_id = matter_id;
            music_chain.dissimilar = dissimilar;
            music_chain.piece_type_id = piece_type_id;
            music_chain.piece_position = piece_position;
            return music_chain;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notation_id
        {
            get
            {
                return _notation_id;
            }
            set
            {
                Onnotation_idChanging(value);
                ReportPropertyChanging("notation_id");
                _notation_id = StructuralObject.SetValidValue(value, "notation_id");
                ReportPropertyChanged("notation_id");
                Onnotation_idChanged();
            }
        }
        private global::System.Int32 _notation_id;
        partial void Onnotation_idChanging(global::System.Int32 value);
        partial void Onnotation_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 matter_id
        {
            get
            {
                return _matter_id;
            }
            set
            {
                Onmatter_idChanging(value);
                ReportPropertyChanging("matter_id");
                _matter_id = StructuralObject.SetValidValue(value, "matter_id");
                ReportPropertyChanged("matter_id");
                Onmatter_idChanged();
            }
        }
        private global::System.Int64 _matter_id;
        partial void Onmatter_idChanging(global::System.Int64 value);
        partial void Onmatter_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean dissimilar
        {
            get
            {
                return _dissimilar;
            }
            set
            {
                OndissimilarChanging(value);
                ReportPropertyChanging("dissimilar");
                _dissimilar = StructuralObject.SetValidValue(value, "dissimilar");
                ReportPropertyChanged("dissimilar");
                OndissimilarChanged();
            }
        }
        private global::System.Boolean _dissimilar;
        partial void OndissimilarChanging(global::System.Boolean value);
        partial void OndissimilarChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 piece_type_id
        {
            get
            {
                return _piece_type_id;
            }
            set
            {
                Onpiece_type_idChanging(value);
                ReportPropertyChanging("piece_type_id");
                _piece_type_id = StructuralObject.SetValidValue(value, "piece_type_id");
                ReportPropertyChanged("piece_type_id");
                Onpiece_type_idChanged();
            }
        }
        private global::System.Int32 _piece_type_id;
        partial void Onpiece_type_idChanging(global::System.Int32 value);
        partial void Onpiece_type_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 piece_position
        {
            get
            {
                return _piece_position;
            }
            set
            {
                Onpiece_positionChanging(value);
                ReportPropertyChanging("piece_position");
                _piece_position = StructuralObject.SetValidValue(value, "piece_position");
                ReportPropertyChanged("piece_position");
                Onpiece_positionChanged();
            }
        }
        private global::System.Int64 _piece_position;
        partial void Onpiece_positionChanging(global::System.Int64 value);
        partial void Onpiece_positionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> remote_db_id
        {
            get
            {
                return _remote_db_id;
            }
            set
            {
                Onremote_db_idChanging(value);
                ReportPropertyChanging("remote_db_id");
                _remote_db_id = StructuralObject.SetValidValue(value, "remote_db_id");
                ReportPropertyChanged("remote_db_id");
                Onremote_db_idChanged();
            }
        }
        private Nullable<global::System.Int32> _remote_db_id;
        partial void Onremote_db_idChanging(Nullable<global::System.Int32> value);
        partial void Onremote_db_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remote_id
        {
            get
            {
                return _remote_id;
            }
            set
            {
                Onremote_idChanging(value);
                ReportPropertyChanging("remote_id");
                _remote_id = StructuralObject.SetValidValue(value, true, "remote_id");
                ReportPropertyChanged("remote_id");
                Onremote_idChanged();
            }
        }
        private global::System.String _remote_id;
        partial void Onremote_idChanging(global::System.String value);
        partial void Onremote_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_music_chain_matter", "matter")]
        public matter matter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_music_chain_matter", "matter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_music_chain_matter", "matter").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<matter> matterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<matter>("LibiadaWebModel.fk_music_chain_matter", "matter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<matter>("LibiadaWebModel.fk_music_chain_matter", "matter", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_music_chain_notation", "notation")]
        public notation notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_music_chain_notation", "notation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_music_chain_notation", "notation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notation> notationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_music_chain_notation", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notation>("LibiadaWebModel.fk_music_chain_notation", "notation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_music_chain_piece_type", "piece_type")]
        public piece_type piece_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_music_chain_piece_type", "piece_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_music_chain_piece_type", "piece_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<piece_type> piece_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_music_chain_piece_type", "piece_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<piece_type>("LibiadaWebModel.fk_music_chain_piece_type", "piece_type", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_binary_characteristic_music_chain", "binary_characteristic")]
        public EntityCollection<binary_characteristic> binary_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_music_chain", "binary_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<binary_characteristic>("LibiadaWebModel.fk_binary_characteristic_music_chain", "binary_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_congeneric_characteristic_music_chain", "congeneric_characteristic")]
        public EntityCollection<congeneric_characteristic> congeneric_characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_music_chain", "congeneric_characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<congeneric_characteristic>("LibiadaWebModel.fk_congeneric_characteristic_music_chain", "congeneric_characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_characteristic_music_chain", "characteristic")]
        public EntityCollection<characteristic> characteristic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_music_chain", "characteristic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<characteristic>("LibiadaWebModel.fk_characteristic_music_chain", "characteristic", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_music_chain_remote_db", "remote_db")]
        public remote_db remote_db
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_music_chain_remote_db", "remote_db").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_music_chain_remote_db", "remote_db").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<remote_db> remote_dbReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<remote_db>("LibiadaWebModel.fk_music_chain_remote_db", "remote_db");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<remote_db>("LibiadaWebModel.fk_music_chain_remote_db", "remote_db", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="nature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class nature : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта nature.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static nature Createnature(global::System.Int32 id, global::System.String name)
        {
            nature nature = new nature();
            nature.id = id;
            nature.name = name;
            return nature;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_matter_nature", "matter")]
        public EntityCollection<matter> matter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<matter>("LibiadaWebModel.fk_matter_nature", "matter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<matter>("LibiadaWebModel.fk_matter_nature", "matter", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_notation_nature", "notation")]
        public EntityCollection<notation> notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<notation>("LibiadaWebModel.fk_notation_nature", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<notation>("LibiadaWebModel.fk_notation_nature", "notation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_piece_type_nature", "piece_type")]
        public EntityCollection<piece_type> piece_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<piece_type>("LibiadaWebModel.fk_piece_type_nature", "piece_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<piece_type>("LibiadaWebModel.fk_piece_type_nature", "piece_type", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="notation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class notation : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта notation.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="nature_id">Исходное значение свойства nature_id.</param>
        public static notation Createnotation(global::System.Int32 id, global::System.String name, global::System.Int32 nature_id)
        {
            notation notation = new notation();
            notation.id = id;
            notation.name = name;
            notation.nature_id = nature_id;
            return notation;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nature_id
        {
            get
            {
                return _nature_id;
            }
            set
            {
                Onnature_idChanging(value);
                ReportPropertyChanging("nature_id");
                _nature_id = StructuralObject.SetValidValue(value, "nature_id");
                ReportPropertyChanged("nature_id");
                Onnature_idChanged();
            }
        }
        private global::System.Int32 _nature_id;
        partial void Onnature_idChanging(global::System.Int32 value);
        partial void Onnature_idChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_notation", "chain")]
        public EntityCollection<chain> chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<chain>("LibiadaWebModel.fk_chain_notation", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<chain>("LibiadaWebModel.fk_chain_notation", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_chain_notation", "dna_chain")]
        public EntityCollection<dna_chain> dna_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<dna_chain>("LibiadaWebModel.fk_dna_chain_notation", "dna_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<dna_chain>("LibiadaWebModel.fk_dna_chain_notation", "dna_chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_element_notation", "element")]
        public EntityCollection<element> element
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<element>("LibiadaWebModel.fk_element_notation", "element");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<element>("LibiadaWebModel.fk_element_notation", "element", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_literature_chain_notation", "literature_chain")]
        public EntityCollection<literature_chain> literature_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<literature_chain>("LibiadaWebModel.fk_literature_chain_notation", "literature_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<literature_chain>("LibiadaWebModel.fk_literature_chain_notation", "literature_chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_notation_nature", "nature")]
        public nature nature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_notation_nature", "nature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_notation_nature", "nature").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<nature> natureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_notation_nature", "nature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<nature>("LibiadaWebModel.fk_notation_nature", "nature", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_fmotiv_notation", "fmotiv")]
        public EntityCollection<fmotiv> fmotiv
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fmotiv>("LibiadaWebModel.fk_fmotiv_notation", "fmotiv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fmotiv>("LibiadaWebModel.fk_fmotiv_notation", "fmotiv", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_measure_notation", "measure")]
        public EntityCollection<measure> measure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<measure>("LibiadaWebModel.fk_measure_notation", "measure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<measure>("LibiadaWebModel.fk_measure_notation", "measure", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_music_chain_notation", "music_chain")]
        public EntityCollection<music_chain> music_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<music_chain>("LibiadaWebModel.fk_music_chain_notation", "music_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<music_chain>("LibiadaWebModel.fk_music_chain_notation", "music_chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_note_notation", "note")]
        public EntityCollection<note> note
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<note>("LibiadaWebModel.fk_note_notation", "note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<note>("LibiadaWebModel.fk_note_notation", "note", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class note : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта note.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="notation_id">Исходное значение свойства notation_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        /// <param name="numerator">Исходное значение свойства numerator.</param>
        /// <param name="denominator">Исходное значение свойства denominator.</param>
        /// <param name="onumerator">Исходное значение свойства onumerator.</param>
        /// <param name="odenominator">Исходное значение свойства odenominator.</param>
        /// <param name="triplet">Исходное значение свойства triplet.</param>
        /// <param name="tie_id">Исходное значение свойства tie_id.</param>
        public static note Createnote(global::System.Int64 id, global::System.Int32 notation_id, global::System.DateTimeOffset created, global::System.Int32 numerator, global::System.Int32 denominator, global::System.Int32 onumerator, global::System.Int32 odenominator, global::System.Boolean triplet, global::System.Int32 tie_id)
        {
            note note = new note();
            note.id = id;
            note.notation_id = notation_id;
            note.created = created;
            note.numerator = numerator;
            note.denominator = denominator;
            note.onumerator = onumerator;
            note.odenominator = odenominator;
            note.triplet = triplet;
            note.tie_id = tie_id;
            return note;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true, "value");
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notation_id
        {
            get
            {
                return _notation_id;
            }
            set
            {
                Onnotation_idChanging(value);
                ReportPropertyChanging("notation_id");
                _notation_id = StructuralObject.SetValidValue(value, "notation_id");
                ReportPropertyChanged("notation_id");
                Onnotation_idChanged();
            }
        }
        private global::System.Int32 _notation_id;
        partial void Onnotation_idChanging(global::System.Int32 value);
        partial void Onnotation_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 numerator
        {
            get
            {
                return _numerator;
            }
            set
            {
                OnnumeratorChanging(value);
                ReportPropertyChanging("numerator");
                _numerator = StructuralObject.SetValidValue(value, "numerator");
                ReportPropertyChanged("numerator");
                OnnumeratorChanged();
            }
        }
        private global::System.Int32 _numerator;
        partial void OnnumeratorChanging(global::System.Int32 value);
        partial void OnnumeratorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 denominator
        {
            get
            {
                return _denominator;
            }
            set
            {
                OndenominatorChanging(value);
                ReportPropertyChanging("denominator");
                _denominator = StructuralObject.SetValidValue(value, "denominator");
                ReportPropertyChanged("denominator");
                OndenominatorChanged();
            }
        }
        private global::System.Int32 _denominator;
        partial void OndenominatorChanging(global::System.Int32 value);
        partial void OndenominatorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ticks
        {
            get
            {
                return _ticks;
            }
            set
            {
                OnticksChanging(value);
                ReportPropertyChanging("ticks");
                _ticks = StructuralObject.SetValidValue(value, "ticks");
                ReportPropertyChanged("ticks");
                OnticksChanged();
            }
        }
        private Nullable<global::System.Int32> _ticks;
        partial void OnticksChanging(Nullable<global::System.Int32> value);
        partial void OnticksChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 onumerator
        {
            get
            {
                return _onumerator;
            }
            set
            {
                OnonumeratorChanging(value);
                ReportPropertyChanging("onumerator");
                _onumerator = StructuralObject.SetValidValue(value, "onumerator");
                ReportPropertyChanged("onumerator");
                OnonumeratorChanged();
            }
        }
        private global::System.Int32 _onumerator;
        partial void OnonumeratorChanging(global::System.Int32 value);
        partial void OnonumeratorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 odenominator
        {
            get
            {
                return _odenominator;
            }
            set
            {
                OnodenominatorChanging(value);
                ReportPropertyChanging("odenominator");
                _odenominator = StructuralObject.SetValidValue(value, "odenominator");
                ReportPropertyChanged("odenominator");
                OnodenominatorChanged();
            }
        }
        private global::System.Int32 _odenominator;
        partial void OnodenominatorChanging(global::System.Int32 value);
        partial void OnodenominatorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean triplet
        {
            get
            {
                return _triplet;
            }
            set
            {
                OntripletChanging(value);
                ReportPropertyChanging("triplet");
                _triplet = StructuralObject.SetValidValue(value, "triplet");
                ReportPropertyChanged("triplet");
                OntripletChanged();
            }
        }
        private global::System.Boolean _triplet;
        partial void OntripletChanging(global::System.Boolean value);
        partial void OntripletChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> priority
        {
            get
            {
                return _priority;
            }
            set
            {
                OnpriorityChanging(value);
                ReportPropertyChanging("priority");
                _priority = StructuralObject.SetValidValue(value, "priority");
                ReportPropertyChanged("priority");
                OnpriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _priority;
        partial void OnpriorityChanging(Nullable<global::System.Int32> value);
        partial void OnpriorityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 tie_id
        {
            get
            {
                return _tie_id;
            }
            set
            {
                Ontie_idChanging(value);
                ReportPropertyChanging("tie_id");
                _tie_id = StructuralObject.SetValidValue(value, "tie_id");
                ReportPropertyChanged("tie_id");
                Ontie_idChanged();
            }
        }
        private global::System.Int32 _tie_id;
        partial void Ontie_idChanging(global::System.Int32 value);
        partial void Ontie_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_note_notation", "notation")]
        public notation notation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_note_notation", "notation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_note_notation", "notation").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notation> notationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notation>("LibiadaWebModel.fk_note_notation", "notation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notation>("LibiadaWebModel.fk_note_notation", "notation", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_pitch_note", "pitch")]
        public EntityCollection<pitch> pitch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<pitch>("LibiadaWebModel.fk_pitch_note", "pitch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<pitch>("LibiadaWebModel.fk_pitch_note", "pitch", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_note_tie", "tie")]
        public tie tie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tie>("LibiadaWebModel.fk_note_tie", "tie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tie>("LibiadaWebModel.fk_note_tie", "tie").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tie> tieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tie>("LibiadaWebModel.fk_note_tie", "tie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tie>("LibiadaWebModel.fk_note_tie", "tie", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="note_symbol")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class note_symbol : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта note_symbol.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static note_symbol Createnote_symbol(global::System.Int32 id, global::System.String name)
        {
            note_symbol note_symbol = new note_symbol();
            note_symbol.id = id;
            note_symbol.name = name;
            return note_symbol;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_pitch_note_symbol", "pitch")]
        public EntityCollection<pitch> pitch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<pitch>("LibiadaWebModel.fk_pitch_note_symbol", "pitch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<pitch>("LibiadaWebModel.fk_pitch_note_symbol", "pitch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="piece_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class piece_type : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта piece_type.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="nature_id">Исходное значение свойства nature_id.</param>
        public static piece_type Createpiece_type(global::System.Int32 id, global::System.String name, global::System.Int32 nature_id)
        {
            piece_type piece_type = new piece_type();
            piece_type.id = id;
            piece_type.name = name;
            piece_type.nature_id = nature_id;
            return piece_type;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nature_id
        {
            get
            {
                return _nature_id;
            }
            set
            {
                Onnature_idChanging(value);
                ReportPropertyChanging("nature_id");
                _nature_id = StructuralObject.SetValidValue(value, "nature_id");
                ReportPropertyChanged("nature_id");
                Onnature_idChanged();
            }
        }
        private global::System.Int32 _nature_id;
        partial void Onnature_idChanging(global::System.Int32 value);
        partial void Onnature_idChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_piece_type", "chain")]
        public EntityCollection<chain> chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<chain>("LibiadaWebModel.fk_chain_piece_type", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<chain>("LibiadaWebModel.fk_chain_piece_type", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_chain_piece_type", "dna_chain")]
        public EntityCollection<dna_chain> dna_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<dna_chain>("LibiadaWebModel.fk_dna_chain_piece_type", "dna_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<dna_chain>("LibiadaWebModel.fk_dna_chain_piece_type", "dna_chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_literature_chain_piece_type", "literature_chain")]
        public EntityCollection<literature_chain> literature_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<literature_chain>("LibiadaWebModel.fk_literature_chain_piece_type", "literature_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<literature_chain>("LibiadaWebModel.fk_literature_chain_piece_type", "literature_chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_piece_type_nature", "nature")]
        public nature nature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_piece_type_nature", "nature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_piece_type_nature", "nature").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<nature> natureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<nature>("LibiadaWebModel.fk_piece_type_nature", "nature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<nature>("LibiadaWebModel.fk_piece_type_nature", "nature", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_fmotiv_piece_type", "fmotiv")]
        public EntityCollection<fmotiv> fmotiv
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fmotiv>("LibiadaWebModel.fk_fmotiv_piece_type", "fmotiv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fmotiv>("LibiadaWebModel.fk_fmotiv_piece_type", "fmotiv", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_measure_piece_type", "measure")]
        public EntityCollection<measure> measure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<measure>("LibiadaWebModel.fk_measure_piece_type", "measure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<measure>("LibiadaWebModel.fk_measure_piece_type", "measure", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_music_chain_piece_type", "music_chain")]
        public EntityCollection<music_chain> music_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<music_chain>("LibiadaWebModel.fk_music_chain_piece_type", "music_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<music_chain>("LibiadaWebModel.fk_music_chain_piece_type", "music_chain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="pitch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class pitch : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта pitch.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="octave">Исходное значение свойства octave.</param>
        /// <param name="midinumber">Исходное значение свойства midinumber.</param>
        /// <param name="instrument_id">Исходное значение свойства instrument_id.</param>
        /// <param name="note_id">Исходное значение свойства note_id.</param>
        /// <param name="accidental_id">Исходное значение свойства accidental_id.</param>
        /// <param name="note_symbol_id">Исходное значение свойства note_symbol_id.</param>
        /// <param name="created">Исходное значение свойства created.</param>
        public static pitch Createpitch(global::System.Int32 id, global::System.Int32 octave, global::System.Int32 midinumber, global::System.Int32 instrument_id, global::System.Int64 note_id, global::System.Int32 accidental_id, global::System.Int32 note_symbol_id, global::System.DateTimeOffset created)
        {
            pitch pitch = new pitch();
            pitch.id = id;
            pitch.octave = octave;
            pitch.midinumber = midinumber;
            pitch.instrument_id = instrument_id;
            pitch.note_id = note_id;
            pitch.accidental_id = accidental_id;
            pitch.note_symbol_id = note_symbol_id;
            pitch.created = created;
            return pitch;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 octave
        {
            get
            {
                return _octave;
            }
            set
            {
                OnoctaveChanging(value);
                ReportPropertyChanging("octave");
                _octave = StructuralObject.SetValidValue(value, "octave");
                ReportPropertyChanged("octave");
                OnoctaveChanged();
            }
        }
        private global::System.Int32 _octave;
        partial void OnoctaveChanging(global::System.Int32 value);
        partial void OnoctaveChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 midinumber
        {
            get
            {
                return _midinumber;
            }
            set
            {
                OnmidinumberChanging(value);
                ReportPropertyChanging("midinumber");
                _midinumber = StructuralObject.SetValidValue(value, "midinumber");
                ReportPropertyChanged("midinumber");
                OnmidinumberChanged();
            }
        }
        private global::System.Int32 _midinumber;
        partial void OnmidinumberChanging(global::System.Int32 value);
        partial void OnmidinumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 instrument_id
        {
            get
            {
                return _instrument_id;
            }
            set
            {
                Oninstrument_idChanging(value);
                ReportPropertyChanging("instrument_id");
                _instrument_id = StructuralObject.SetValidValue(value, "instrument_id");
                ReportPropertyChanged("instrument_id");
                Oninstrument_idChanged();
            }
        }
        private global::System.Int32 _instrument_id;
        partial void Oninstrument_idChanging(global::System.Int32 value);
        partial void Oninstrument_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 note_id
        {
            get
            {
                return _note_id;
            }
            set
            {
                Onnote_idChanging(value);
                ReportPropertyChanging("note_id");
                _note_id = StructuralObject.SetValidValue(value, "note_id");
                ReportPropertyChanged("note_id");
                Onnote_idChanged();
            }
        }
        private global::System.Int64 _note_id;
        partial void Onnote_idChanging(global::System.Int64 value);
        partial void Onnote_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 accidental_id
        {
            get
            {
                return _accidental_id;
            }
            set
            {
                Onaccidental_idChanging(value);
                ReportPropertyChanging("accidental_id");
                _accidental_id = StructuralObject.SetValidValue(value, "accidental_id");
                ReportPropertyChanged("accidental_id");
                Onaccidental_idChanged();
            }
        }
        private global::System.Int32 _accidental_id;
        partial void Onaccidental_idChanging(global::System.Int32 value);
        partial void Onaccidental_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 note_symbol_id
        {
            get
            {
                return _note_symbol_id;
            }
            set
            {
                Onnote_symbol_idChanging(value);
                ReportPropertyChanging("note_symbol_id");
                _note_symbol_id = StructuralObject.SetValidValue(value, "note_symbol_id");
                ReportPropertyChanged("note_symbol_id");
                Onnote_symbol_idChanged();
            }
        }
        private global::System.Int32 _note_symbol_id;
        partial void Onnote_symbol_idChanging(global::System.Int32 value);
        partial void Onnote_symbol_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value, "created");
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> modified
        {
            get
            {
                return _modified;
            }
            set
            {
                OnmodifiedChanging(value);
                ReportPropertyChanging("modified");
                _modified = StructuralObject.SetValidValue(value, "modified");
                ReportPropertyChanged("modified");
                OnmodifiedChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _modified;
        partial void OnmodifiedChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnmodifiedChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_pitch_note", "note")]
        public note note
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<note>("LibiadaWebModel.fk_pitch_note", "note").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<note>("LibiadaWebModel.fk_pitch_note", "note").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<note> noteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<note>("LibiadaWebModel.fk_pitch_note", "note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<note>("LibiadaWebModel.fk_pitch_note", "note", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_pitch_instrument", "instrument")]
        public instrument instrument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument>("LibiadaWebModel.fk_pitch_instrument", "instrument").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument>("LibiadaWebModel.fk_pitch_instrument", "instrument").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<instrument> instrumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument>("LibiadaWebModel.fk_pitch_instrument", "instrument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<instrument>("LibiadaWebModel.fk_pitch_instrument", "instrument", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_pitch_accidental", "accidental")]
        public accidental accidental
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accidental>("LibiadaWebModel.fk_pitch_accidental", "accidental").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accidental>("LibiadaWebModel.fk_pitch_accidental", "accidental").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<accidental> accidentalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accidental>("LibiadaWebModel.fk_pitch_accidental", "accidental");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<accidental>("LibiadaWebModel.fk_pitch_accidental", "accidental", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_pitch_note_symbol", "note_symbol")]
        public note_symbol note_symbol
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<note_symbol>("LibiadaWebModel.fk_pitch_note_symbol", "note_symbol").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<note_symbol>("LibiadaWebModel.fk_pitch_note_symbol", "note_symbol").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<note_symbol> note_symbolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<note_symbol>("LibiadaWebModel.fk_pitch_note_symbol", "note_symbol");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<note_symbol>("LibiadaWebModel.fk_pitch_note_symbol", "note_symbol", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class product : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта product.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="piece_type_id">Исходное значение свойства piece_type_id.</param>
        public static product Createproduct(global::System.Int32 id, global::System.String name, global::System.Int32 piece_type_id)
        {
            product product = new product();
            product.id = id;
            product.name = name;
            product.piece_type_id = piece_type_id;
            return product;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 piece_type_id
        {
            get
            {
                return _piece_type_id;
            }
            set
            {
                Onpiece_type_idChanging(value);
                ReportPropertyChanging("piece_type_id");
                _piece_type_id = StructuralObject.SetValidValue(value, "piece_type_id");
                ReportPropertyChanged("piece_type_id");
                Onpiece_type_idChanged();
            }
        }
        private global::System.Int32 _piece_type_id;
        partial void Onpiece_type_idChanging(global::System.Int32 value);
        partial void Onpiece_type_idChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_chain_product", "dna_chain")]
        public EntityCollection<dna_chain> dna_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<dna_chain>("LibiadaWebModel.fk_dna_chain_product", "dna_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<dna_chain>("LibiadaWebModel.fk_dna_chain_product", "dna_chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_product_piece_type", "piece_type")]
        public piece_type piece_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_product_piece_type", "piece_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_product_piece_type", "piece_type").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<piece_type> piece_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<piece_type>("LibiadaWebModel.fk_product_piece_type", "piece_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<piece_type>("LibiadaWebModel.fk_product_piece_type", "piece_type", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="remote_db")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class remote_db : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта remote_db.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="nature_id">Исходное значение свойства nature_id.</param>
        public static remote_db Createremote_db(global::System.Int32 id, global::System.String name, global::System.Int32 nature_id)
        {
            remote_db remote_db = new remote_db();
            remote_db.id = id;
            remote_db.name = name;
            remote_db.nature_id = nature_id;
            return remote_db;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String url
        {
            get
            {
                return _url;
            }
            set
            {
                OnurlChanging(value);
                ReportPropertyChanging("url");
                _url = StructuralObject.SetValidValue(value, true, "url");
                ReportPropertyChanged("url");
                OnurlChanged();
            }
        }
        private global::System.String _url;
        partial void OnurlChanging(global::System.String value);
        partial void OnurlChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nature_id
        {
            get
            {
                return _nature_id;
            }
            set
            {
                Onnature_idChanging(value);
                ReportPropertyChanging("nature_id");
                _nature_id = StructuralObject.SetValidValue(value, "nature_id");
                ReportPropertyChanged("nature_id");
                Onnature_idChanged();
            }
        }
        private global::System.Int32 _nature_id;
        partial void Onnature_idChanging(global::System.Int32 value);
        partial void Onnature_idChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_chain_remote_db", "chain")]
        public EntityCollection<chain> chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<chain>("LibiadaWebModel.fk_chain_remote_db", "chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<chain>("LibiadaWebModel.fk_chain_remote_db", "chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_dna_chain_remote_db", "dna_chain")]
        public EntityCollection<dna_chain> dna_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<dna_chain>("LibiadaWebModel.fk_dna_chain_remote_db", "dna_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<dna_chain>("LibiadaWebModel.fk_dna_chain_remote_db", "dna_chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_literature_chain_remote_db", "literature_chain")]
        public EntityCollection<literature_chain> literature_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<literature_chain>("LibiadaWebModel.fk_literature_chain_remote_db", "literature_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<literature_chain>("LibiadaWebModel.fk_literature_chain_remote_db", "literature_chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_music_chain_remote_db", "music_chain")]
        public EntityCollection<music_chain> music_chain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<music_chain>("LibiadaWebModel.fk_music_chain_remote_db", "music_chain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<music_chain>("LibiadaWebModel.fk_music_chain_remote_db", "music_chain", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_fmotiv_remote_db", "fmotiv")]
        public EntityCollection<fmotiv> fmotiv
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fmotiv>("LibiadaWebModel.fk_fmotiv_remote_db", "fmotiv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fmotiv>("LibiadaWebModel.fk_fmotiv_remote_db", "fmotiv", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_measure_remote_db", "measure")]
        public EntityCollection<measure> measure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<measure>("LibiadaWebModel.fk_measure_remote_db", "measure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<measure>("LibiadaWebModel.fk_measure_remote_db", "measure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LibiadaWebModel", Name="tie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tie : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта tie.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static tie Createtie(global::System.Int32 id, global::System.String name)
        {
            tie tie = new tie();
            tie.id = id;
            tie.name = name;
            return tie;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true, "description");
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LibiadaWebModel", "fk_note_tie", "note")]
        public EntityCollection<note> note
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<note>("LibiadaWebModel.fk_note_tie", "note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<note>("LibiadaWebModel.fk_note_tie", "note", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
