@model matter

@{
    ViewBag.Title = "Создание";
}

<h2>Создание</h2>

<script>
    var app = angular.module('CreateMatter', []);

    app.controller('CreateMatterCtrl', ['$scope', 'filterFilter', function($scope, filterFilter) {

        var data = @Html.Raw(Json.Encode(ViewBag.data));

        MapModelFromJson($scope, data);

        $scope.original = false;
        $scope.localFile = true;
        $scope.languageId = $scope.languages[0].Value;
        $scope.natureId = $scope.natures[0].Value;

        var filterByNature = function() {
            var arraysForFiltration = ["notations", "pieceTypes", "remoteDbs"];

            arraysForFiltration.forEach(function(array)
            {
                FilterOptionsByNature($scope, filterFilter, array);
            });

            $scope.notationId = $scope.notationsFiltered[0].Value;
            $scope.pieceTypeId = $scope.pieceTypesFiltered[0].Value;
        };

        $scope.$watch('natureId', filterByNature, true);

        $scope.isGeneticChain = function() {
            return $scope.natureGenetic == $scope.natureId;
        };

        $scope.isLiteratureChain = function() {
            return $scope.natureLiterature == $scope.natureId;
        };

        $scope.isRemoteDbDefined = function() {
            return $scope.remoteDbsFiltered.length > 0 && $scope.remoteDbId > 0;
        };
    }]);

</script>


@using (Html.BeginForm("Create", "Matter", FormMethod.Post, new { enctype = "multipart/form-data", data_ng_app = "CreateMatter" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" data-ng-controller="CreateMatterCtrl">
        <h4>Объект</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name)
                @Html.ValidationMessageFor(model => model.name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description)
                @Html.ValidationMessageFor(model => model.description)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Загружать цепочку из локального файла", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBox("localFile", new { data_ng_model = "localFile" })
            </div>
        </div>

        <div class="form-group" data-ng-show="localFile">
            @Html.Label("Файл цепочки", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="file" id="file" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nature_id, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select data-ng-model="natureId" data-ng-options="n.Value as n.Text for n in natures"></select>
                <input type="hidden" name="nature_id" value="{{natureId}}" />
                @Html.ValidationMessageFor(model => model.nature_id)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Форма записи цепочки", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select data-ng-model="notationId" data-ng-options="n.Value as n.Text for n in notationsFiltered"></select>
                <input type="hidden" name="notation_id" value="{{notationId}}" />
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Тип цепочки", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select data-ng-model="pieceTypeId" data-ng-options="p.Value as p.Text for p in pieceTypesFiltered"></select>
                <input type="hidden" name="piece_type_id" value="{{pieceTypeId}}" />
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Стороняя БД", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select data-ng-model="remoteDbId" data-ng-options="r.Value as r.Text for r in remoteDbsFiltered"></select>
                <input type="hidden" name="remote_db_id" value="{{remoteDbId}}" />
            </div>
        </div>

        <div class="form-group" data-ng-show="isRemoteDbDefined()">
            @Html.Label("id в сторонней БД", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="remoteId" data-ng-model="remoteId" />
            </div>
        </div>

        <div data-ng-show="isGeneticChain()">
            <div class="form-group">
                @Html.Label("Продукт последовательности", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select data-ng-model="productId" data-ng-options="l.Value as l.Text for l in products"></select>
                    <input type="hidden" name="productId" value="{{productId}}" />
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Неполная последовательность", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBox("partial")
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Комплементарная цепочка", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBox("complement")
                </div>
            </div>
        </div>

        <div data-ng-show="isLiteratureChain()">
            <div class="form-group">
                @Html.Label("Язык литературного произведения", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select data-ng-model="languageId" data-ng-options="l.Value as l.Text for l in languages"></select>
                    <input type="hidden" name="languageId" value="{{languageId}}" />
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Произведение является оригиналом, а не переводом", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBox("original")
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Переводчик", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select data-ng-model="translatorId" data-ng-options="t.Value as t.Text for t in translators"></select>
                    <input type="hidden" name="translatorId" value="{{translatorId}}" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/angularjs")
    @Scripts.Render("~/bundles/procedures")
}
