@using LibiadaWeb.Helpers
@model LibiadaWeb.matter

@{
    ViewBag.Title = "Объекты";
}
@Html.ValidationMessage("Error")
<h2>Создание</h2>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    var app = angular.module('CreateMatter', []);

    app.controller('CreateMatterCtrl', ['$scope', 'filterFilter', function($scope, filterFilter) {

        var data = @Html.Raw(Json.Encode(ViewBag.data)) ;
        
        for(var param in data) {
            $scope[param] = data[param];
        }
        
        $scope.localFile = true;

        $scope.language = $scope.languages[0];

        $scope.nature = $scope.natures[0].Value;

        var filterByNature = function(natureId) {
            $scope.filteredNotations = filterFilter($scope.notations, { Nature: natureId });
            $scope.filteredPieceTypes = filterFilter($scope.pieceTypes, { Nature: natureId });

            $scope.notation = $scope.filteredNotations[0];
            $scope.pieceType = $scope.filteredPieceTypes[0];
        };

        filterByNature($scope.nature);

        $scope.$watch('nature', filterByNature, true);

        $scope.isLiteratureChain = function() {
            return $scope.natureLiterature == $scope.nature;
        };
    }]);
    
</script>

@using (Html.BeginForm("Create", "Matter", FormMethod.Post, new
    {
        enctype = "multipart/form-data",
        data_ng_app = "CreateMatter"
    }))
{
    @Html.ValidationSummary(true)
    <fieldset data-ng-controller="CreateMatterCtrl">
        <legend>Объект</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.name)
            @Html.ValidationMessageFor(model => model.name)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.description)
            @Html.ValidationMessageFor(model => model.description)
        </div>
         
        <div class="editor-label">
            @Html.Label("Загружать цепочку из локального файла")
        </div>

        @Html.CheckBox("localFile", new {data_ng_model="localFile"})
        
        <br/>
        <input type="file" name="file" id="file" data-ng-show="localFile"/>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.nature_id)
        </div>
        <div class="editor-field">
            @Html.DropDownList("nature_id", new SelectListItem[0], new
                {
                    data_ng_model="nature", 
                    data_ng_options="n.Value as n.Text for n in natures"
                })
            @Html.ValidationMessageFor(model => model.nature_id)
        </div>

        <div class="editor-label">
            @Html.Label("Форма записи цепочки")
        </div>
        <div class="editor-field">
            @Html.DropDownList("notationId", new SelectListItem[0], new
                {
                    data_ng_model = "notation",
                    data_ng_options = "n.Text for n in filteredNotations"
                })
        </div>
         <div class="editor-label">
            @Html.Label("Тип цепочки")
        </div>
        <div class="editor-field">
            @Html.DropDownList("piece_type_id", new SelectListItem[0], new
                {
                    data_ng_model = "pieceType",
                    data_ng_options = "p.Text for p in filteredPieceTypes"
                })
        </div>
        
        <div class="editor-label">
            @Html.Label("Стороняя БД")
        </div>
        <div class="editor-field">
            @Html.DropDownList("remoteDbId", new SelectListItem[0], new
                {
                    data_ng_model = "remoteDb", ng_options = "r.Text for r in remoteDbs"
                })
        </div>
        <div>
            <div class="editor-label">
                @Html.Label("id в сторонней БД")
            </div>
            <div class="editor-field">
                @Html.Editor("remoteId")
            </div>
        </div>
        

        <div data-ng-show="isLiteratureChain()">
            <div class="editor-label">
                @Html.Label("Язык литературного произведения")
            </div>
            <div class="editor-field">
                @Html.DropDownList("languageId", new SelectListItem[0], new
                    {
                        data_ng_model = "language", ng_options = "l.Text for l in languages"
                    })
            </div>

            <div class="editor-label">
                @Html.Label("Произведение является оригиналом, а не переводом")
            </div>
            @Html.CheckBox("original")
        </div>

        <p>
            <input type="submit" value="Создать" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>
