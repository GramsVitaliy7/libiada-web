@using LibiadaWeb.Helpers
@model LibiadaWeb.matter

@{
    ViewBag.Title = "Объекты";
}
@Html.ValidationMessage("Error")
<h2>Создание</h2>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    var app = angular.module('CreateMatter', []);

    app.controller('CreateMatterCtrl', ['$scope', 'filterFilter', function($scope, filterFilter) {

        var data = @Html.Raw(Json.Encode(ViewBag.data));

        MapModelFromJson($scope, data);

        $scope.original = false; 
        $scope.localFile = true;
        $scope.languageId = $scope.languages[0].Value;
        $scope.natureId = $scope.natures[0].Value;

        var filterByNature = function() {
            var arraysForFiltration = ["notations", "pieceTypes", "remoteDbs"];

            arraysForFiltration.forEach(function(array)
            {
                FilterOptionsByNature($scope, filterFilter, array);
            });

            $scope.notationId = $scope.notationsFiltered[0].Value;
            $scope.pieceTypeId = $scope.pieceTypesFiltered[0].Value;
        };

        $scope.$watch('natureId', filterByNature, true);

        $scope.isLiteratureChain = function() {
            return $scope.natureLiterature == $scope.natureId;
        };
    }]);
    
</script>

@using (Html.BeginForm("Create", "Matter", FormMethod.Post, new
{
    enctype = "multipart/form-data",
    data_ng_app = "CreateMatter"
}))
{
    @Html.ValidationSummary(true)
    <fieldset data-ng-controller="CreateMatterCtrl">
        <legend>Объект</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.name)
            @Html.ValidationMessageFor(model => model.name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.description)
            @Html.ValidationMessageFor(model => model.description)
        </div>

        <div class="editor-label">
            @Html.Label("Загружать цепочку из локального файла")
            @Html.CheckBox("localFile", new {data_ng_model = "localFile"})
        </div>
        <div class="editor-field" data-ng-show="localFile">
            <input type="file" name="file" id="file" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.nature_id)
        </div>
        <div class="editor-field">
            <select data-ng-model="natureId" data-ng-options="n.Value as n.Text for n in natures"></select>
            <input type="hidden" name="nature_id" value="{{natureId}}" />
            @Html.ValidationMessageFor(model => model.nature_id)
        </div>

        <div class="editor-label">
            @Html.Label("Форма записи цепочки")
        </div>
        <div class="editor-field">
            <select data-ng-model="notationId" data-ng-options="n.Value as n.Text for n in notationsFiltered"></select>
            <input type="hidden" name="notationId" value="{{notationId}}" />
        </div>
        <div class="editor-label">
            @Html.Label("Тип цепочки")
        </div>
        <div class="editor-field">
            <select data-ng-model="pieceTypeId" data-ng-options="p.Value as p.Text for p in pieceTypesFiltered"></select>
            <input type="hidden" name="pieceTypeId" value="{{pieceTypeId}}" />
        </div>

        <div class="editor-label">
            @Html.Label("Стороняя БД")
        </div>
        <div class="editor-field">
            <select data-ng-model="remoteDbId" data-ng-options="r.Value as r.Text for r in remoteDbsFiltered"></select>
            <input type="hidden" name="remoteDbId" value="{{remoteDbId}}" />
        </div>
        <div>
            <div class="editor-label">
                @Html.Label("id в сторонней БД")
            </div>
            <div class="editor-field">
                <input type="text" name="remoteId" data-ng-model="remoteId" />
            </div>
        </div>


        <div data-ng-show="isLiteratureChain()">
            <div class="editor-label">
                @Html.Label("Язык литературного произведения")
            </div>
            <div class="editor-field">
                <select data-ng-model="languageId" data-ng-options="l.Value as l.Text for l in languages"></select>
                <input type="hidden" name="languageId" value="{{languageId}}" />
            </div>

            <div class="editor-label">
                @Html.Label("Произведение является оригиналом, а не переводом")
            </div>
            <div class="editor-field">
                @Html.CheckBox("original")
            </div>
        </div>

        <p>
            <input type="submit" value="Создать" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>
