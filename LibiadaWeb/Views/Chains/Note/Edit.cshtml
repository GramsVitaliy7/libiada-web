@model note

@{
    ViewBag.Title = "Редактирование";
}

<h2>Редактирование</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>note</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.value, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.value)
                @Html.ValidationMessageFor(model => model.value)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description)
                @Html.ValidationMessageFor(model => model.description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name)
                @Html.ValidationMessageFor(model => model.name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.notation_id, "notation_id", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("notation_id", string.Empty)
                @Html.ValidationMessageFor(model => model.notation_id)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.created, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.created)
                @Html.ValidationMessageFor(model => model.created)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numerator, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numerator)
                @Html.ValidationMessageFor(model => model.numerator)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.denominator, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.denominator)
                @Html.ValidationMessageFor(model => model.denominator)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ticks, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ticks)
                @Html.ValidationMessageFor(model => model.ticks)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.onumerator, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.onumerator)
                @Html.ValidationMessageFor(model => model.onumerator)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.odenominator, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.odenominator)
                @Html.ValidationMessageFor(model => model.odenominator)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.triplet, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.triplet)
                @Html.ValidationMessageFor(model => model.triplet)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.priority, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.priority)
                @Html.ValidationMessageFor(model => model.priority)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tie_id, "tie_id", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("tie_id", string.Empty)
                @Html.ValidationMessageFor(model => model.tie_id)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modified, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modified)
                @Html.ValidationMessageFor(model => model.modified)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить изменения" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
