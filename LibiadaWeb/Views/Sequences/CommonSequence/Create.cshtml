@using LibiadaWeb.Models
@model CommonSequence

@{
    ViewBag.Title = "Создание цепочки";
}

<h2>Создание цепочки</h2>

@Html.ValidationMessage("Error")

<script>
    var data = @Html.Raw(Json.Encode(ViewBag.data));
</script>

@using (Html.BeginForm("Create", "CommonSequence", FormMethod.Post, new { enctype = "multipart/form-data", data_ng_app = "MatterSequenceCreate" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" data-ng-controller="MatterSequenceCreateCtrl">
        <h4>Цепочка</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Matter.NatureId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select data-ng-model="natureId" data-ng-options="n.Value as n.Text for n in natures"></select>
                @Html.ValidationMessageFor(model => model.Matter.NatureId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MatterId, "MatterId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select data-ng-model="matterId" data-ng-options="m.Value as m.Text for m in mattersFiltered"></select>
                <input type="hidden" name="matter_id" data-ng-value="matterId" />
                @Html.ValidationMessageFor(model => model.MatterId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Загружать цепочку из локального файла", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBox("localFile", new { data_ng_model = "localFile" })
            </div>
        </div>

        <div class="form-group" data-ng-show="localFile">
            @Html.Label("Файл цепочки", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="file" id="file" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NotationId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select data-ng-model="notationId" data-ng-options="n.Value as n.Text for n in notationsFiltered"></select>
                <input type="hidden" name="notation_id" data-ng-value="notationId" />
                @Html.ValidationMessageFor(model => model.NotationId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PieceTypeId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select data-ng-model="pieceTypeId" data-ng-options="p.Value as p.Text for p in pieceTypesFiltered"></select>
                <input type="hidden" name="piece_type_id" data-ng-value="pieceTypeId" />
                @Html.ValidationMessageFor(model => model.PieceTypeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RemoteDbId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select data-ng-model="remoteDbId" data-ng-options="r.Value as r.Text for r in remoteDbsFiltered"></select>
                <input type="hidden" name="remote_db_id" data-ng-value="remoteDbId" />
                @Html.ValidationMessageFor(model => model.RemoteDbId)
            </div>
        </div>

        <div class="form-group" data-ng-show="isRemoteDbDefined()">
            @Html.LabelFor(model => model.RemoteId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RemoteId)
                @Html.ValidationMessageFor(model => model.RemoteId)
            </div>
        </div>

        <div data-ng-switch="natureId">
            <div data-ng-switch-when="@Aliases.Nature.Genetic">
                <div class="form-group">
                    @Html.Label("Продукт последовательности", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select data-ng-model="productId" data-ng-options="l.Value as l.Text for l in products"></select>
                        <input type="hidden" name="productId" data-ng-value="productId" />
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Неполная последовательность", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBox("partial")
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Комплементарная цепочка", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBox("complement")
                    </div>
                </div>
            </div>

            <div data-ng-switch-when="@Aliases.Nature.Literature">
                <div class="form-group">
                    @Html.Label("Язык литературного произведения", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select data-ng-model="languageId" data-ng-options="l.Value as l.Text for l in languages"></select>
                        <input type="hidden" name="languageId" data-ng-value="languageId" />
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Произведение является оригиналом, а не переводом", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBox("original")
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Переводчик", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select data-ng-model="translatorId" data-ng-options="t.Value as t.Text for t in translators"></select>
                        <input type="hidden" name="translatorId" data-ng-value="translatorId" />
                    </div>
                </div>
            </div>

            <div data-ng-switch-when="@Aliases.Nature.Music">

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/angularjs")
    @Scripts.Render("~/bundles/procedures")
    @Scripts.Render("~/bundles/controllers/matterSequenceCreate")
}
